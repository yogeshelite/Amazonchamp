<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Mvc.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute">
            <summary>
            Specifies what HTTP methods an action supports.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="method">The HTTP method the action supports.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="methods">The HTTP methods the action supports.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.HttpMethods">
            <summary>
            Gets the HTTP methods the action supports.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.Route">
            <summary>
            The route template. May be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.Microsoft#AspNet#Mvc#Infrastructure#IRouteTemplateProvider#Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets the value of the
            <see cref="P:Microsoft.AspNet.Mvc.RouteAttribute.Order"/> or a default value of 0 if the <see cref="T:Microsoft.AspNet.Mvc.RouteAttribute"/>
            doesn't define a value on the controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.Microsoft#AspNet#Mvc#Infrastructure#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionBindingContextAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNet.Mvc.ActionBindingContext"/> when creating the controller. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionContextAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNet.Mvc.ActionContext"/> when creating the controller. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionResult">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.IActionResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNet.Mvc.ActionContext)">
            <summary>
            Executes the result operation of the action method asynchronously. This method is called by MVC to process
            the result of an action method.
            The default implementation of this method calls the <see cref="M:Microsoft.AspNet.Mvc.ActionResult.ExecuteResult(Microsoft.AspNet.Mvc.ActionContext)"/> method and
            returns a completed task.
            </summary>
            <param name="context">The context in which the result is executed. The context information includes
            information about the action that was executed and request information.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionResult.ExecuteResult(Microsoft.AspNet.Mvc.ActionContext)">
            <summary>
            Executes the result operation of the action method synchronously. This method is called by MVC to process
            the result of an action method.
            </summary>
            <param name="context">The context in which the result is executed. The context information includes
            information about the action that was executed and request information.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorerSettingsAttribute">
            <summary>
            Controls the visibility and group name for an <c>ApiDescription</c>
            of the associated controller class or action method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorerSettingsAttribute.GroupName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorerSettingsAttribute.IgnoreApi">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.BadRequestObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/> that when executed will produce a Bad Request (400) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.BadRequestObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.BadRequestObjectResult"/> instance.
            </summary>
            <param name="error">Contains the errors to be returned to the client.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.BadRequestObjectResult.#ctor(Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.BadRequestObjectResult"/> instance.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.BadRequestResult">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult"/> that when
            executed will produce a Bad Request (400) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.BadRequestResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.BadRequestResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.BindAttribute">
            <summary>
            This attribute can be used on action parameters and types, to indicate model level metadata.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.BindAttribute.#ctor(System.String[])">
            <summary>
            Creates a new instace of <see cref="T:Microsoft.AspNet.Mvc.BindAttribute"/>.
            </summary>
            <param name="include">Names of parameters to include in binding.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.BindAttribute.#ctor(System.Type)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.BindAttribute"/>.
            </summary>
            <param name="predicateProviderType">The type which implements
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IPropertyBindingPredicateProvider"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.BindAttribute.PredicateProviderType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.BindAttribute.Include">
            <summary>
            Gets the names of properties to include in model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.BindAttribute.Prefix">
            <summary>
            Allows a user to specify a particular prefix to match during model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.BindAttribute.Microsoft#AspNet#Mvc#ModelBinding#IModelNameProvider#Name">
            <summary>
            Represents the model name used during model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.BindAttribute.PropertyFilter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.CacheProfile">
            <summary>
            Defines a set of settings which can be used for response caching.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CacheProfile.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            If this property is set to a non null value,
            the "max-age" in "Cache-control" header is set in the 
            <see cref="P:Microsoft.AspNet.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CacheProfile.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            If this property is set to a non null value,
            the "Cache-control" header is set in the <see cref="P:Microsoft.AspNet.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CacheProfile.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header in
            <see cref="P:Microsoft.AspNet.Http.HttpContext.Response" /> to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "Duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CacheProfile.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary header in <see cref="P:Microsoft.AspNet.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ConsumesAttribute">
            <summary>
            Specifies the allowed content types which can be used to select the action based on request's content-type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ConsumesAttribute.#ctor(System.String,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.ConsumesAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ConsumesAttribute.Microsoft#AspNet#Mvc#ActionConstraints#IActionConstraint#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ConsumesAttribute.ContentTypes">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ConsumesAttribute.OnResourceExecuting(Microsoft.AspNet.Mvc.Filters.ResourceExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ConsumesAttribute.OnResourceExecuted(Microsoft.AspNet.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ContentResult.Content">
            <summary>
            Gets or set the content representing the body of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ContentResult.ContentType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> representing the Content-Type header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ContentResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.CreatedAtActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedAtActionResult.#ctor(System.String,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.CreatedAtActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtActionResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtActionResult.ActionName">
            <summary>
            Gets or sets the name of the action to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtActionResult.ControllerName">
            <summary>
            Gets or sets the name of the controller to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtActionResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedAtActionResult.OnFormatting(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.CreatedAtRouteResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedAtRouteResult.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.CreatedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedAtRouteResult.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.CreatedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtRouteResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtRouteResult.RouteName">
            <summary>
            Gets or sets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedAtRouteResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedAtRouteResult.OnFormatting(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.CreatedResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.CreatedResult"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedResult.#ctor(System.Uri,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.CreatedResult"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.CreatedResult.Location">
            <summary>
            Gets or sets the location at which the content has been created.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.CreatedResult.OnFormatting(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.EmptyResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that when executed will
            do nothing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.EmptyResult.ExecuteResult(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FileContentResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that when executed will
            write a binary file to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileContentResult"/> instance with
            the provided <paramref name="fileContents"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileContentResult.#ctor(System.Byte[],Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileContentResult"/> instance with
            the provided <paramref name="fileContents"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FileContentResult.FileContents">
            <summary>
            Gets or sets the file contents.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileContentResult.WriteFileAsync(Microsoft.AspNet.Http.HttpResponse)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FileResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that when executed will
            write a file as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileResult.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileResult"/> instance with
            the provided <paramref name="contentType"/>.
            </summary>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileResult.#ctor(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileResult"/> instance with
            the provided <paramref name="contentType"/>.
            </summary>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FileResult.ContentType">
            <summary>
            Gets the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> representing the Content-Type header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FileResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileResult.ExecuteResultAsync(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileResult.WriteFileAsync(Microsoft.AspNet.Http.HttpResponse)">
            <summary>
            Writes the file to the specified <paramref name="response"/>.
            </summary>
            <param name="response">The <see cref="T:Microsoft.AspNet.Http.HttpResponse"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that will complete when the file has been written to the response.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FileStreamResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that when executed will
            write a file from a stream to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileStreamResult"/> instance with
            the provided <paramref name="fileStream"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileStreamResult.#ctor(System.IO.Stream,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.FileStreamResult"/> instance with
            the provided <paramref name="fileStream"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FileStreamResult.FileStream">
            <summary>
            Gets or sets the stream with the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FileStreamResult.WriteFileAsync(Microsoft.AspNet.Http.HttpResponse)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FormatFilterAttribute">
            <summary>
            A filter which will use the format value in the route data or query string to set the content type on an
            <see cref="T:Microsoft.AspNet.Mvc.ObjectResult" /> returned from an action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.FormatFilterAttribute.CreateInstance(System.IServiceProvider)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/>.</param>
            <returns>An instance of <see cref="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromBodyAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromBodyAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromFormAttribute">
            <summary>
            Specifies that a parameter or property should be bound using form-data in the request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromFormAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromFormAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromHeaderAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request headers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromHeaderAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromHeaderAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromQueryAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request query string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromQueryAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromQueryAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromRouteAttribute">
            <summary>
            Specifies that a parameter or property should be bound using route-data from the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromRouteAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromRouteAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.FromServicesAttribute">
             <summary>
             Specifies that a parameter or property should be bound using the request services.
             </summary>
             <example>
             In this example, the LocationService property on the VehicleWithDealerViewModel class 
             will be bound to the value resolved for the ILocationService service from the request services.
            
             <code> 
             public class VehicleWithDealerViewModel 
             {
                 [FromServices]
                 public ILocationService LocationService { get; set; }
            
                 public void Update()
                 {
                     LocationService.Update();
                 }
             }
             </code> 
            
             In this example an implementation of IProductModelRequestService is registered as a service.
             Then in the GetProduct action, the parameter is bound to an instance of IProductModelRequestService
             which is resolved from the the request services.
            
             <code>
             [HttpGet]
             public ProductModel GetProduct([FromServices] IProductModelRequestService productModelReqest)
             {
                 return productModelReqest.Value;
             }
             </code>
             </example> 
        </member>
        <member name="P:Microsoft.AspNet.Mvc.FromServicesAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpDeleteAttribute">
            <summary>
            Identifies an action that only supports the HTTP DELETE method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpDeleteAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpDeleteAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpDeleteAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpDeleteAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpGetAttribute">
            <summary>
            Identifies an action that only supports the HTTP GET method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpGetAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpGetAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpGetAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpGetAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpHeadAttribute">
            <summary>
            Identifies an action that only supports the HTTP HEAD method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpHeadAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpHeadAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpHeadAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpHeadAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpNotFoundObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/> that when executed will produce a Not Found (404) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpNotFoundObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpNotFoundObjectResult"/> instance.
            </summary>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpNotFoundResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult"/> that when
            executed will produce a Not Found (404) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpNotFoundResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpNotFoundResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpOkObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/> that when executed performs content negotiation, formats the entity body, and
            will produce a <see cref="F:Microsoft.AspNet.Http.StatusCodes.Status200OK"/> response if negotiation and formatting succeed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpOkObjectResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.HttpOkObjectResult"/> class.
            </summary>
            <param name="value">The content to format into the entity body.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpOkResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult"/> that when executed will produce an empty
            <see cref="F:Microsoft.AspNet.Http.StatusCodes.Status200OK"/> response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpOkResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.HttpOkResult"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpPatchAttribute">
            <summary>
            Identifies an action that only supports the HTTP PATCH method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPatchAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPatchAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPatchAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPatchAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpPostAttribute">
            <summary>
            Identifies an action that only supports the HTTP POST method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPostAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPostAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPostAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPostAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpPutAttribute">
            <summary>
            Identifies an action that only supports the HTTP PUT method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPutAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPutAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpPutAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpPutAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpResponseStreamWriter">
            <summary>
            Writes to the <see cref="T:System.IO.Stream"/> using the supplied <see cref="P:Microsoft.AspNet.Mvc.HttpResponseStreamWriter.Encoding"/>.
            It does not write the BOM and also does not close the stream.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.HttpResponseStreamWriter.DefaultBufferSize">
            <summary>
            Default buffer size.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that when executed will
            produce an HTTP response with the given response status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult"/> class
            with the given <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.HttpStatusCodeResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpStatusCodeResult.ExecuteResult(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.HttpUnauthorizedResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.HttpUnauthorizedResult"/> that when
            executed will produce an Unauthorized (401) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.HttpUnauthorizedResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.HttpUnauthorizedResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.IUrlHelper">
            <summary>
            Defines the contract for the helper to build URLs for ASP.NET MVC within an application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)">
            <summary>
            Generates a fully qualified or absolute URL specified by <see cref="T:Microsoft.AspNet.Mvc.Routing.UrlActionContext"/> for an action
            method, which contains action name, controller name, route values, protocol to use, host name, and fragment.
            </summary>
            <param name="actionContext">The context object for the generated URLs for an action method.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IUrlHelper.Content(System.String)">
            <summary>
            Converts a virtual (relative) path to an application absolute path.
            </summary>
            <remarks>
            If the specified content path does not start with the tilde (~) character,
            this method returns <paramref name="contentPath"/> unchanged.
            </remarks>
            <param name="contentPath">The virtual path of the content.</param>
            <returns>The application absolute path.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IUrlHelper.IsLocalUrl(System.String)">
            <summary>
            Returns a value that indicates whether the URL is local. A URL with an absolute path is considered local
            if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.
            </summary>
            <param name="url">The URL.</param>
            <returns><c>true</c> if the URL is local; otherwise, <c>false</c>.</returns>
            <example>
            <para>
            For example, the following URLs are considered local:
            /Views/Default/Index.html
            ~/Index.html
            </para>
            <para>
            The following URLs are non-local:
            ../Index.html
            http://www.contoso.com/
            http://localhost/Index.html
            </para>
            </example>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)">
            <summary>
            Generates a fully qualified or absolute URL specified by <see cref="T:Microsoft.AspNet.Mvc.Routing.UrlRouteContext"/>, which
            contains the route name, the route values, protocol to use, host name and fragment.
            </summary>
            <param name="routeContext">The context object for the generated URLs for a route.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IUrlHelper.Link(System.String,System.Object)">
            <summary>
            Generates an absolute URL using the specified route name and values.
            </summary>
            <param name="routeName">The name of the route that is used to generate the URL.</param>
            <param name="values">An object that contains the route values.</param>
            <returns>The generated absolute URL.</returns>
            <remarks>
            The protocol and host is obtained from the current request.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.LocalRedirectResult">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ActionResult"/> that returns a redirect to the supplied local URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.LocalRedirectResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.LocalRedirectResult"/> class with the values
            provided.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.LocalRedirectResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.LocalRedirectResult"/> class with the values
            provided.
            </summary>
            <param name="url">The local URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.LocalRedirectResult.Permanent">
            <summary>
            Gets or sets the value that specifies that the redirect should be permanent if true or temporary if false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.LocalRedirectResult.Url">
            <summary>
            Gets or sets the local URL to redirect to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.LocalRedirectResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.IUrlHelper"/> for this result.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.LocalRedirectResult.ExecuteResult(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinderAttribute">
            <summary>
            An attribute that can specify a model name or type of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> to use for binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinderAttribute.BinderType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinderAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinderAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelMetadataTypeAttribute">
            <summary>
            This attribute specifies the metadata class to associate with a data model class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelMetadataTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.ModelMetadataTypeAttribute" /> class.
            </summary>
            <param name="type">The type of metadata class that is associated with a data model class.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelMetadataTypeAttribute.MetadataType">
            <summary>
            Gets the type of metadata class that is associated with a data model class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.MvcOptions">
            <summary>
            Provides programmatic configuration for the MVC framework.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.CacheProfiles">
            <summary>
            Gets a Dictionary of CacheProfile Names, <see cref="T:Microsoft.AspNet.Mvc.CacheProfile"/> which are pre-defined settings for
            <see cref="T:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.Conventions">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention"/> instances that will be applied to
            the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/> when discovering actions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.Filters">
            <summary>
            Gets a collection of <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/> which are used to construct filters that
            apply to all actions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.FormatterMappings">
            <summary>
            Used to specify mapping between the URL Format and corresponding
            <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.InputFormatters">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/>s that are used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.MaxModelValidationErrors">
            <summary>
            Gets or sets the maximum number of validation errors that are allowed by this application before further
            errors are ignored.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ModelBinders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/>s used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ModelBindingMessageProvider">
            <summary>
            Gets the default <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider"/>. Changes here are copied to the
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider"/> property of all <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>
            instances unless overridden in a custom <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ModelMetadataDetailsProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/> instances that will be used to
            create <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> instances.
            </summary>
            <remarks>
            A provider should implement one or more of the following interfaces, depending on what
            kind of details are provided:
            <ul>
            <li><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/></li>
            <li><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/></li>
            <li><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/></li>
            </ul>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ModelValidatorProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.OutputFormatters">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/>s that are used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.RespectBrowserAcceptHeader">
            <summary>
            Gets or sets the flag which causes content negotiation to ignore Accept header
            when it contains the media type */*. <see langword="false"/> by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ValidationExcludeFilters">
            <summary>
            Gets a collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/>s that are used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.MvcOptions.ValueProviderFactories">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProviderFactory"/> used by this application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.NonControllerAttribute">
            <summary>
            Indicates that the type and any derived types that this attribute is applied to
            is not considered a controller by the default controller discovery mechanism.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ObjectResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ObjectResult.OnFormatting(Microsoft.AspNet.Mvc.ActionContext)">
            <summary>
            This method is called before the formatter writes to the output stream.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.PhysicalFileResult">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.FileResult"/> on execution will write a file from disk to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PhysicalFileResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.PhysicalFileResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PhysicalFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.PhysicalFileResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.PhysicalFileResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PhysicalFileResult.WriteFileAsync(Microsoft.AspNet.Http.HttpResponse)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PhysicalFileResult.GetFileStream(System.String)">
            <summary>
            Returns <see cref="T:System.IO.Stream"/> for the specified <paramref name="path"/>.
            </summary>
            <param name="path">The path for which the <see cref="T:System.IO.FileStream"/> is needed.</param>
            <returns><see cref="T:System.IO.FileStream"/> for the specified <paramref name="path"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ProducesAttribute">
            <summary>
            Specifies the allowed content types and the type of the value returned by the action
            which can be used to select a formatter while executing <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ProducesAttribute.#ctor(System.Type)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNet.Mvc.ProducesAttribute"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNet.Mvc.ProducesAttribute.Type"/> of object that is going to be written in the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ProducesAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNet.Mvc.ProducesAttribute"/> with allowed content types.
            </summary>
            <param name="contentType">The allowed content type for a response.</param>
            <param name="additionalContentTypes">Additional allowed content types for a response.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ResponseCacheAttribute">
            <summary>
            Specifies the parameters necessary for setting appropriate headers in response caching.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            This sets "max-age" in "Cache-control" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary response header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.CacheProfileName">
            <summary>
            Gets or sets the value of the cache profile name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ResponseCacheAttribute.Order">
            <summary>
            The order of the filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ResponseCacheLocation">
            <summary>
            Determines the value for the "Cache-control" header in the response.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.ResponseCacheLocation.Any">
            <summary>
            Cached in both proxies and client.
            Sets "Cache-control" header to "public".
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.ResponseCacheLocation.Client">
            <summary>
            Cached only in the client.
            Sets "Cache-control" header to "private".
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.ResponseCacheLocation.None">
            <summary>
            "Cache-control" and "Pragma" headers are set to "no-cache".
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.RouteAttribute">
            <summary>
            Specifies an attribute route on a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.RouteAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.RouteAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.RouteAttribute.Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.RouteAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower order
            value are tried first. If an action defines a route by providing an <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IRouteTemplateProvider"/>
            with a non <c>null</c> order, that order is used instead of this value. If neither the action nor the
            controller defines an order, a default value of 0 is used.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.RouteAttribute.Microsoft#AspNet#Mvc#Infrastructure#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.RouteAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.SerializableError">
            <summary>
            Defines a serializable container for storing ModelState information.
            This information is stored as key/value pairs.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.SerializableError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.SerializableError"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.SerializableError.#ctor(Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.SerializableError"/>.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateEntry"/> containing the validation errors.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.UnsupportedMediaTypeResult">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.HttpStatusCodeResult"/> that when
            executed will produce a UnsupportedMediaType (415) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UnsupportedMediaTypeResult.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.UnsupportedMediaTypeResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper)">
            <summary>
            Generates a fully qualified or absolute URL for an action method.
            </summary>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name.
            </summary>
            <param name="action">The name of the action method.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            and route values.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            and controller name.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.String,System.Object)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            controller name, and route values.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            controller name, route values, and protocol to use.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            controller name, route values, protocol to use, and host name.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.Action(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for an action method by using the specified action name,
            controller name, route values, protocol to use, host name and fragment.
            </summary>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The fully qualified or absolute URL to an action method.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.Object)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route values.
            </summary>
            <param name="values">An object that contains route values.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route name.
            </summary>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route values by
            using the specified route name.
            </summary>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.Object,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route values by
            using the specified route name, and protocol to use.
            </summary>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.Object,System.String,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route values by
            using the specified route name, protocol to use, and host name.
            </summary>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNet.Mvc.IUrlHelper,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates a fully qualified or absolute URL for the specified route values by
            using the specified route name, protocol to use, host name and fragment.
            </summary>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The fully qualified or absolute URL.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.VirtualFileResult">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.FileResult" /> that on execution writes the file specified using a virtual path to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.VirtualFileResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.VirtualFileResult"/> instance with the provided <paramref name="fileName"/>
            and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be relative/virtual.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.VirtualFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.VirtualFileResult"/> instance with
            the provided <paramref name="fileName"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be relative/virtual.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.VirtualFileResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.VirtualFileResult.FileProvider">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.FileProviders.IFileProvider"/> used to resolve paths.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.VirtualFileResult.WriteFileAsync(Microsoft.AspNet.Http.HttpResponse)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.VirtualFileResult.GetFileStream(Microsoft.AspNet.FileProviders.IFileInfo)">
            <summary>
            Returns <see cref="T:System.IO.Stream"/> for the specified <paramref name="fileInfo"/>.
            </summary>
            <param name="fileInfo">The <see cref="T:Microsoft.AspNet.FileProviders.IFileInfo"/> for which the stream is needed.</param>
            <returns><see cref="T:System.IO.Stream"/> for the specified <paramref name="fileInfo"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionConstraints.ActionMethodSelectorAttribute">
            <summary>
            Base class for attributes which can implement conditional logic to enable or disable an action
            for a given request. See <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ActionConstraints.ActionMethodSelectorAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionConstraints.ActionMethodSelectorAttribute.Accept(Microsoft.AspNet.Mvc.ActionConstraints.ActionConstraintContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionConstraints.ActionMethodSelectorAttribute.IsValidForRequest(Microsoft.AspNet.Routing.RouteContext,Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor)">
            <summary>
            Determines whether the action selection is valid for the specified route context.
            </summary>
            <param name="routeContext">The route context.</param>
            <param name="action">Information about the action.</param>
            <returns>
            <see langword="true"/> if the action  selection is valid for the specified context;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionConstraints.DefaultActionConstraintProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraintProvider"/>.
            </summary>
            <remarks>
            This provider is able to provide an <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraint"/> instance when the
            <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraintMetadata"/> implements <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraint"/> or
            <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraintFactory"/>/
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ActionConstraints.DefaultActionConstraintProvider.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionConstraints.DefaultActionConstraintProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.ActionConstraints.ActionConstraintProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionConstraints.DefaultActionConstraintProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.ActionConstraints.ActionConstraintProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionConstraints.IConsumesActionConstraint">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ActionConstraints.IActionConstraint"/> constraint that identifies a type which can be used to select an action
            based on incoming request.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorer.ApiDescriptionActionData">
            <summary>
            Represents data used to build an <c>ApiDescription</c>, stored as part of the
            <see cref="P:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorer.ApiDescriptionActionData.GroupName">
            <summary>
            The <c>ApiDescription.GroupName</c> of <c>ApiDescription</c> objects for the associated
            action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorer.IApiDescriptionGroupNameProvider">
            <summary>
            Represents group name metadata for an <c>ApiDescription</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorer.IApiDescriptionGroupNameProvider.GroupName">
            <summary>
            The group name for the <c>ApiDescription</c> of the associated action or controller.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorer.IApiDescriptionVisibilityProvider">
            <summary>
            Represents visibility metadata for an <c>ApiDescription</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorer.IApiDescriptionVisibilityProvider.IgnoreApi">
            <summary>
            If <c>false</c> then no <c>ApiDescription</c> objects will be created for the associated controller
            or action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorer.IApiResponseFormatMetadataProvider">
            <summary>
            Provides metadata information about the response format to an <c>IApiDescriptionProvider</c>.
            </summary>
            <remarks>
            An <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> should implement this interface to expose metadata information
            to an <c>IApiDescriptionProvider</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApiExplorer.IApiResponseFormatMetadataProvider.GetSupportedContentTypes(Microsoft.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Gets a filtered list of content types which are supported by the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/>
            for the <paramref name="declaredType"/> and <paramref name="contentType"/>.
            </summary>
            <param name="contentType">
            The content type for which the supported content types are desired, or <c>null</c> if any content
            type can be used.
            </param>
            <param name="objectType">
            The <see cref="T:System.Type"/> for which the supported content types are desired.
            </param>
            <returns>Content types which are supported by the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApiExplorer.IApiResponseMetadataProvider">
            <summary>
            Provides a return type and a set of possible content types returned by a successful execution of the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type">
            <summary>
            Optimistic return type of the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(System.Collections.Generic.IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue})">
            <summary>
            Configures a collection of allowed content types which can be produced by the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.ApiExplorer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/> for this action.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.ApiExplorer"/> allows configuration of settings for ApiExplorer
            which apply to the action.
            
            Settings applied by <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.ApiExplorer"/> override settings from
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> and <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.Properties">
            <summary>
            Gets a set of properties associated with the action.
            These properties will be copied to <see cref="P:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
            <remarks>
            Entries will take precedence over entries with the same key in
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.Properties"/> and <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.Properties"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel">
            <summary>
            A model for ApiExplorer properties associated with a controller or action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel.#ctor(Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/> with properties copied from <paramref name="other"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/> to copy.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel.IsVisible">
            <summary>
            If <c>true</c>, <c>APIExplorer.ApiDescription</c> objects will be created for the associated
            controller or action.
            </summary>
            <remarks>
            Set this value to configure whether or not the associated controller or action will appear in ApiExplorer.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel.GroupName">
            <summary>
            The value for <c>APIExplorer.ApiDescription.GroupName</c> of
            <c>APIExplorer.ApiDescription</c> objects created for the associated controller or action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.ApiExplorer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/> for the application.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> allows configuration of default settings
            for ApiExplorer that apply to all actions unless overridden by 
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> or <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.ApiExplorer"/>.
            
            If using <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> to set <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel.IsVisible"/> to
            <c>true</c>, this setting will only be honored for actions which use attribute routing.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.Properties">
            <summary>
            Gets a set of properties associated with all actions.
            These properties will be copied to <see cref="P:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelConventions">
            <summary>
            Applies conventions to a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelConventions.ApplyConventions(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention})">
            <summary>
            Applies conventions to a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
            <param name="applicationModel">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.</param>
            <param name="conventions">The set of conventions.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext">
            <summary>
            A context object for <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext.Result">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel)">
            <summary>
            Combines two <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/> instances and returns
            a new <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/> instance with the result.
            </summary>
            <param name="left">The left <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/>.</param>
            <param name="right">The right <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/>.</param>
            <returns>A new instance of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/> that represents the
            combination of the two <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.AttributeRouteModel"/> instances or <c>null</c> if both
            parameters are <c>null</c>.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.ApiExplorer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApiExplorerModel"/> for this controller.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> allows configuration of settings for ApiExplorer
            which apply to all actions in the controller unless overridden by <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel.ApiExplorer"/>.
            
            Settings applied by <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> override settings from
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel.Properties">
            <summary>
            Gets a set of properties associated with the controller.
            These properties will be copied to <see cref="P:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
            <remarks>
            Entries will take precedence over entries with the same key
            in <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel.Properties"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.BuildControllerModels(System.Reflection.TypeInfo)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> instances for the given controller <see cref="T:System.Reflection.TypeInfo"/>.
            </summary>
            <param name="typeInfo">The controller <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <returns>
            A set of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> instances for the given controller <see cref="T:System.Reflection.TypeInfo"/> or
            <c>null</c> if the <paramref name="typeInfo"/> does not represent a controller.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateControllerModel(System.Reflection.TypeInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> for the given <see cref="T:System.Reflection.TypeInfo"/>.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> for the given <see cref="T:System.Reflection.TypeInfo"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreatePropertyModel(System.Reflection.PropertyInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/> for the given <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/> for the given <see cref="T:System.Reflection.PropertyInfo"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.BuildActionModels(System.Reflection.TypeInfo,System.Reflection.MethodInfo)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> instances for the given action <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="typeInfo">The controller <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <param name="methodInfo">The action <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>
            A set of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/> instances for the given action <see cref="T:System.Reflection.MethodInfo"/> or
            <c>null</c> if the <paramref name="methodInfo"/> does not represent an action.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.IsAction(System.Reflection.TypeInfo,System.Reflection.MethodInfo)">
            <summary>
            Returns <c>true</c> if the <paramref name="methodInfo"/> is an action. Otherwise <c>false</c>.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns><c>true</c> if the <paramref name="methodInfo"/> is an action. Otherwise <c>false</c>.</returns>
            <remarks>
            Override this method to provide custom logic to determine which methods are considered actions.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateActionModel(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
             <summary>
             Creates an <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/> for the given <see cref="T:System.Reflection.MethodInfo"/>.
             </summary>
             <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo"/>.</param>
             <param name="attributes">The set of attributes to use as metadata.</param>
             <returns>An <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/> for the given <see cref="T:System.Reflection.MethodInfo"/>.</returns>
             <remarks>
             An action-method in code may expand into multiple <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/> instances depending on how
             the action is routed. In the case of multiple routing attributes, this method will invoked be once for
             each action that can be created.
            
             If overriding this method, use the provided <paramref name="attributes"/> list to find metadata related to
             the action being created.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateParameterModel(System.Reflection.ParameterInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ParameterModel"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
            <param name="parameterInfo">The <see cref="T:System.Reflection.ParameterInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ParameterModel"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention">
             <summary>
             Allows customization of the of the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on an action method.
            
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> customications and before
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IParameterModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ActionModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention">
             <summary>
             Allows customization of the of the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
             </summary>
             <remarks>
             Implementaions of this interface can be registered in <see cref="P:Microsoft.AspNet.Mvc.MvcOptions.Conventions"/>
             to customize metadata about the application.
            
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention"/> run before other types of customizations to the
             reflected model.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
            <param name="application">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider">
            <summary>
            Builds or modifies an <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/> for action discovery.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order">
            <summary>
            Gets the order value for determining the order of execution of providers. Providers execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> property.
            </summary>
            <remarks>
            <para>
            Providers are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> property.
            A provider with a lower numeric value of <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> will have its
            <see cref="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> called before that of a provider with a higher numeric value of
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>. The <see cref="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> method is called in the reverse ordering after
            all calls to <see cref="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)"/>. A provider with a lower numeric value of
            <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> will have its <see cref="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> method called after that of a provider
            with a higher numeric value of <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </para>
            <para>
            If two providers have the same numeric value of <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>, then their relative execution order
            is undefined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the first pass of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/> building. See <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the second pass of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/> building. See <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention">
             <summary>
             Allows customization of the of the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on a controller class.
            
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention"/> customizations and before
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
            <param name="controller">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.IParameterModelConvention">
             <summary>
             Allows customization of the of the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on an action method parameter.
            
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IParameterModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.IParameterModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ParameterModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ParameterModel"/>.
            </summary>
            <param name="parameter">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ParameterModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel">
            <summary>
            A type which is used to represent a property in a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.#ctor(System.Reflection.PropertyInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/>.
            </summary>
            <param name="propertyInfo">The <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.PropertyInfo"/> for the underlying property.</param>
            <param name="attributes">Any attributes which are annotated on the property.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.#ctor(Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel)">
            <summary>
            Creats a new instance of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/> from a given <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/> which needs to be copied.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.Controller">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ControllerModel"/> this <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel"/> is associated with.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.Attributes">
            <summary>
            Gets any attributes which are annotated on the property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.BindingInfo">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.BindingInfo"/> associated with this model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.PropertyInfo">
            <summary>
            Gets the underlying <see cref="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ApplicationModels.PropertyModel.PropertyName">
            <summary>
            Gets or sets the name of the property represented by this model.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptorBuilder">
            <summary>
            Creates instances of <see cref="T:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptor"/> from <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptorBuilder.Build(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            Creates instances of <see cref="T:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptor"/> from <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
            <param name="application">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel"/>.</param>
            <returns>The list of <see cref="T:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptor"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptorProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.Abstractions.ActionDescriptorProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionDescriptorProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.Abstractions.ActionDescriptorProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionExecutor.CastToObject(System.Threading.Tasks.Task)">
            <summary>
            Cast Task to Task of object
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionExecutor.CastToObject``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Cast Task of T to Task of object
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionInvokerProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.Abstractions.ActionInvokerProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ControllerActionInvokerProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.Abstractions.ActionInvokerProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.ControllerBoundPropertyDescriptor">
            <summary>
            A descriptor for model bound properties of a controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.ControllerBoundPropertyDescriptor.PropertyInfo">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNet.Mvc.Controllers.ControllerBoundPropertyDescriptor.PropertyInfo"/> for this property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.ControllerParameterDescriptor">
            <summary>
            A descriptor for method parameters of an action method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.ControllerParameterDescriptor.ParameterInfo">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNet.Mvc.Controllers.ControllerParameterDescriptor.ParameterInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerActionArgumentBinder">
            <summary>
            Provides a default implementation of <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerActionArgumentBinder"/>.
            Uses ModelBinding to populate action parameters.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerActivator">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerActivator"/> that uses type activation to create controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerActivator.#ctor(Microsoft.AspNet.Mvc.Infrastructure.ITypeActivatorCache)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerActivator"/>.
            </summary>
            <param name="typeActivatorCache">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.ITypeActivatorCache"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerActivator.Create(Microsoft.AspNet.Mvc.ActionContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory.#ctor(Microsoft.AspNet.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Controllers.IControllerPropertyActivator})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory"/>.
            </summary>
            <param name="controllerActivator">
            <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerActivator"/> used to create controller instances.
            </param>
            <param name="propertyActivators">
            A set of <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerPropertyActivator"/> instances used to initialize controller
            properties.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory.ControllerActivator">
            <summary>
            The <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerActivator"/> used to create a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNet.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerFactory.ReleaseController(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerTypeProvider">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerTypeProvider"/> that identifies controller types from assemblies
            specified by the registered <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerTypeProvider.#ctor(Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.Controllers.DefaultControllerTypeProvider"/>.
            </summary>
            <param name="assemblyProvider"><see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> that provides assemblies to look for
            controllers in.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.DefaultControllerTypeProvider.ControllerTypes">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.DefaultControllerTypeProvider.IsController(System.Reflection.TypeInfo,System.Collections.Generic.ISet{System.Reflection.Assembly})">
            <summary>
            Returns <c>true</c> if the <paramref name="typeInfo"/> is a controller. Otherwise <c>false</c>.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <param name="candidateAssemblies">The set of candidate assemblies.</param>
            <returns><c>true</c> if the <paramref name="typeInfo"/> is a controller. Otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.FilterActionInvoker.CreateInstance">
            <summary>
            Called to create an instance of an object which will act as the reciever of the action invocation.
            </summary>
            <returns>The constructed instance or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.FilterActionInvoker.ReleaseInstance(System.Object)">
            <summary>
            Called to create an instance of an object which will act as the reciever of the action invocation.
            </summary>
            <param name="instance">The instance to release.</param>
            <remarks>This method will not be called if <see cref="M:Microsoft.AspNet.Mvc.Controllers.FilterActionInvoker.CreateInstance"/> returns <c>null</c>.</remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.FilterActionInvoker.FilterCursor">
             <summary>
             A one-way cursor for filters.
             </summary>
             <remarks>
             This will iterate the filter collection once per-stage, and skip any filters that don't have
             the one of interfaces that applies to the current stage.
            
             Filters are always executed in the following order, but short circuiting plays a role.
            
             Indentation reflects nesting.
            
             1. Exception Filters
                 2. Authorization Filters
                 3. Action Filters
                    Action
            
             4. Result Filters
                Result
            
             </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.IControllerActionArgumentBinder">
            <summary>
            Provides a dictionary of action arguments.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.IControllerActionArgumentBinder.BindActionArgumentsAsync(Microsoft.AspNet.Mvc.ActionContext,Microsoft.AspNet.Mvc.ActionBindingContext,System.Object)">
            <summary>
            Returns a dictionary of representing the parameter-argument name-value pairs,
            which can be used to invoke the action. Also binds properties explicitly marked properties on the 
            <paramref name="controller"/>.
            </summary>
            <param name="context">The action context assoicated with the current action.</param>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ActionBindingContext"/>.</param>
            <param name="controller">The controller object which contains the action.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.IControllerActivator">
            <summary>
            Provides methods to create a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.IControllerActivator.Create(Microsoft.AspNet.Mvc.ActionContext,System.Type)">
            <summary>
            Creates a controller.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ActionContext"/> for the executing action.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.IControllerFactory">
            <summary>
            Provides methods for creation and disposal of controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNet.Mvc.ActionContext)">
            <summary>
            Creates a new controller for the specified <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext"><see cref="T:Microsoft.AspNet.Mvc.ActionContext"/> for the action to execute.</param>
            <returns>The controller.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.IControllerFactory.ReleaseController(System.Object)">
            <summary>
            Releases a controller instance.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.IControllerTypeProvider">
            <summary>
            Provides methods for discovery of controller types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.IControllerTypeProvider.ControllerTypes">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of controller <see cref="T:System.Reflection.TypeInfo"/>s.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.ServiceBasedControllerActivator">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerActivator"/> that retrieves controllers as services from the request's
            <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.ServiceBasedControllerActivator.Create(Microsoft.AspNet.Mvc.ActionContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.Controllers.IControllerTypeProvider"/> with a fixed set of types that are used as controllers. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider"/>.
            </summary>
            <param name="controllerTypes">The sequence of controller <see cref="T:System.Reflection.TypeInfo"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider.ControllerTypes">
            <summary>
            Gets the list of controller <see cref="T:System.Reflection.TypeInfo"/>s.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Controllers.StaticControllerTypeProvider.Microsoft#AspNet#Mvc#Controllers#IControllerTypeProvider#ControllerTypes">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.AllowAnonymousFilter">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNet.Mvc.Filters.IAllowAnonymousFilter"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.AuthorizeFilter">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNet.Mvc.Filters.IAsyncAuthorizationFilter"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.AuthorizeFilter.#ctor(Microsoft.AspNet.Authorization.AuthorizationPolicy)">
            <summary>
            Authorize filter for a specific policy.
            </summary>
            <param name="policy">Authorization policy to be used.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.AuthorizeFilter.Policy">
            <summary>
            Authorization policy to be used.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNet.Mvc.Filters.AuthorizationContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.ControllerActionFilter">
            <summary>
            A filter implementation which delegates to the controller for action filter interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ControllerActionFilter.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.ControllerActionFilter.OnActionExecutionAsync(Microsoft.AspNet.Mvc.Filters.ActionExecutingContext,Microsoft.AspNet.Mvc.Filters.ActionExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.ControllerResultFilter">
            <summary>
            A filter implementation which delegates to the controller for result filter interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ControllerResultFilter.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.ControllerResultFilter.OnResultExecutionAsync(Microsoft.AspNet.Mvc.Filters.ResultExecutingContext,Microsoft.AspNet.Mvc.Filters.ResultExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.DefaultFilterProvider.OnProvidersExecuting(Microsoft.AspNet.Mvc.Filters.FilterProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.DefaultFilterProvider.OnProvidersExecuted(Microsoft.AspNet.Mvc.Filters.FilterProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.Add(System.Type)">
            <summary>
            Adds a type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.Add(System.Type,System.Int32)">
            <summary>
            Adds a type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.</param>
            <param name="order">The order of the added filter.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.AddService(System.Type)">
            <summary>
            Adds a type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will created through dependency injection. Use
            <see cref="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.AddService(System.Type,System.Int32)">
            <summary>
            Adds a type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing an <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/>.</param>
            <param name="order">The order of the added filter.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will created through dependency injection. Use
            <see cref="M:Microsoft.AspNet.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.FilterScope">
             <summary>
             Contains constant values for known filter scopes.
            
             Scope defines the ordering of filters that have the same order. Scope is by-default
             defined by how a filter is registered.
             </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.ICorsAuthorizationFilter">
            <summary>
            A filter which can be used to enable/disable cors support for a resource.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.IResponseCacheFilter">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.Filters.IActionFilter"/> which sets the appropriate headers related to Response caching.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.Filters.ActionFilterAttribute"/> which sets the appropriate headers related to response caching.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter.#ctor(Microsoft.AspNet.Mvc.CacheProfile)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter"/>
            </summary>
            <param name="cacheProfile">The profile which contains the settings for
            <see cref="T:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            This is a required parameter.
            This sets "max-age" in "Cache-control" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Filters.ResponseCacheFilter.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary response header.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter">
            <summary>
            A filter which will use the format value in the route data or query string to set the content type on an
            <see cref="T:Microsoft.AspNet.Mvc.ObjectResult" /> returned from an action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatFilter.#ctor(Microsoft.Extensions.OptionsModel.IOptions{Microsoft.AspNet.Mvc.MvcOptions},Microsoft.AspNet.Mvc.Infrastructure.IActionContextAccessor)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.Extensions.OptionsModel.IOptions`1"/></param>
            <param name="actionContextAccessor">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionContextAccessor"/></param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.FormatFilter.Format">
            <summary>
            Format value in the current request. <c>null</c> if format not present in the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.FormatFilter.ContentType">
            <summary>
            <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> for the format value in the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.FormatFilter.IsActive">
            <summary>
            <c>true</c> if the current <see cref="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter"/> is active and will execute.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatFilter.OnResourceExecuting(Microsoft.AspNet.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            As a <see cref="T:Microsoft.AspNet.Mvc.Filters.IResourceFilter"/>, this filter looks at the request and rejects it before going ahead if
            1. The format in the request does not match any format in the map.
            2. If there is a conflicting producesFilter.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Filters.ResourceExecutingContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatFilter.OnResourceExecuted(Microsoft.AspNet.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatFilter.OnResultExecuting(Microsoft.AspNet.Mvc.Filters.ResultExecutingContext)">
            <summary>
            Sets a Content Type on an  <see cref="T:Microsoft.AspNet.Mvc.ObjectResult" />  using a format value from the request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Filters.ResultExecutingContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatFilter.OnResultExecuted(Microsoft.AspNet.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.FormatterCollection`1">
            <summary>
            Represents a collection of formatters.
            </summary>
            <typeparam name="TFormatter">The type of formatters in the collection.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatterCollection`1.RemoveType``1">
            <summary>
            Removes all formatters of the specified type.
            </summary>
            <typeparam name="T">The type to remove.</typeparam>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.FormatterMappings">
            <summary>
            Used to specify mapping between the URL Format and corresponding <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets mapping for the format to specified <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/>. 
            If the format already exists, the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> will be overwritten with the new value.
            </summary>
            <param name="format">The format value.</param>
            <param name="contentType">The <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> for the format value.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)">
            <summary>
            Gets <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> for the specified format.
            </summary>
            <param name="format">The format value.</param>
            <returns>The <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> for input format.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)">
            <summary>
            Clears the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> mapping for the format.
            </summary>
            <param name="format">The format value.</param>
            <returns><c>true</c> if the format is successfully found and cleared; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.HttpNoContentOutputFormatter">
            <summary>
            Sets the status code to 204 if the content is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.HttpNoContentOutputFormatter.TreatNullValueAsNoContent">
            <summary>
            Indicates whether to select this formatter if the returned value from the action
            is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.HttpNoContentOutputFormatter.CanWriteResult(Microsoft.AspNet.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.HttpNoContentOutputFormatter.WriteAsync(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.HttpNotAcceptableOutputFormatter">
            <summary>
            A formatter which selects itself when content-negotiation has failed and writes a 406 Not Acceptable response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.HttpNotAcceptableOutputFormatter.CanWriteResult(Microsoft.AspNet.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.HttpNotAcceptableOutputFormatter.WriteAsync(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.IFormatFilter">
            <summary>
             A filter which produces a desired content type for the current request. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.IFormatFilter.Format">
            <summary>
            format value in the current request. <c>null</c> if format not present in the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.IFormatFilter.ContentType">
            <summary>
            <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> for the format value in the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.IFormatFilter.IsActive">
            <summary>
            <c>true</c> if the current <see cref="T:Microsoft.AspNet.Mvc.Formatters.FormatFilter"/> is active and will execute. 
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.InputFormatter">
            <summary>
            Reads an object from the request body.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Formatters.InputFormatter.UTF8EncodingWithoutBOM">
            <summary>
            Returns UTF8 Encoding without BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Formatters.InputFormatter.UTF16EncodingLittleEndian">
            <summary>
            Returns UTF16 Encoding which uses littleEndian byte order with BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.InputFormatter.SupportedEncodings">
            <summary>
            Gets the mutable collection of character encodings supported by
            this <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatter"/>. The encodings are
            used when reading the data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.InputFormatter.SupportedMediaTypes">
            <summary>
            Gets the mutable collection of <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> elements supported by
            this <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.InputFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatter"/> can deserialize an object of the given
            <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of object that will be read.</param>
            <returns><c>true</c> if the <paramref name="type"/> can be read, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <summary>
            Reads an object from the request body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatterContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion deserializes the request body.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.InputFormatter.SelectCharacterEncoding(Microsoft.AspNet.Mvc.Formatters.InputFormatterContext)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> based on <paramref name="context"/>'s
            <see cref="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.InputFormatterContext"/>.</param>
            <returns>
            An <see cref="T:System.Text.Encoding"/> based on <paramref name="context"/>'s
            <see cref="P:Microsoft.Net.Http.Headers.MediaTypeHeaderValue.Charset"/>. <c>null</c> if no supported encoding was found.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatter">
            <summary>
            Writes an object to the output stream.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatter"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.SupportedEncodings">
            <summary>
            Gets the mutable collection of character encodings supported by
            this <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatter"/>. The encodings are
            used when writing the data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.SupportedMediaTypes">
            <summary>
            Gets the mutable collection of <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> elements supported by
            this <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)">
            <summary>
            Returns a value indicating whether or not the given type can be written by this serializer.
            </summary>
            <param name="type">The object type.</param>
            <returns><c>true</c> if the type can be written, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(Microsoft.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.SelectCharacterEncoding(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Determines the best <see cref="T:System.Text.Encoding"/> amongst the supported encodings
            for reading or writing an HTTP entity body based on the provided <paramref name="contentTypeHeader"/>.
            </summary>
            <param name="context">The formatter context associated with the call.
            </param>
            <returns>The <see cref="T:System.Text.Encoding"/> to use when reading the request or writing the response.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNet.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Sets the headers on <see cref="T:Microsoft.AspNet.Http.HttpResponse"/> object.
            </summary>
            <param name="context">The formatter context associated with the call.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Writes the response body.
            </summary>
            <param name="context">The formatter context associated with the call.</param>
            <returns>A task which can write the response body.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.StreamOutputFormatter">
            <summary>
            Always copies the stream to the response, regardless of requested content type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.StreamOutputFormatter.CanWriteResult(Microsoft.AspNet.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Formatters.StreamOutputFormatter.WriteAsync(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Formatters.StringOutputFormatter">
            <summary>
            Always writes a string value to the response, regardless of requested content type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection">
            <summary>
            A cached collection of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection"/>.
            </summary>
            <param name="items">The result of action discovery</param>
            <param name="version">The unique version of discovered actions.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.Items">
            <summary>
            Returns the cached <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.Version">
            <summary>
            Returns the unique version of the currently cached items.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.AmbiguousActionException">
            <summary>
            An exception which indicates multiple matches in action selection.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.DefaultActionDescriptorsCollectionProvider">
            <summary>
            Default implementation for ActionDescriptors.
            This implementation caches the results at first call, and is not responsible for updates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.DefaultActionDescriptorsCollectionProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.DefaultActionDescriptorsCollectionProvider" /> class.
            </summary>
            <param name="serviceProvider">The application IServiceProvider.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.DefaultActionDescriptorsCollectionProvider.ActionDescriptors">
            <summary>
            Returns a cached collection of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.DefaultActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor})">
            <summary>
            Returns the set of best matching actions.
            </summary>
            <param name="actions">The set of actions that satisfy all constraints.</param>
            <returns>A list of the best matching actions.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.DefaultAssemblyProvider.ReferenceAssemblies">
            <summary>
            Gets the set of assembly names that are used as root for discovery of
            MVC controllers, view components and views.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.DefaultAssemblyProvider.CandidateAssemblies">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.DefaultAssemblyProvider.GetCandidateLibraries">
            <summary>
            Returns a list of libraries that references the assemblies in <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.DefaultAssemblyProvider.ReferenceAssemblies"/>.
            By default it returns all assemblies that reference any of the primary MVC assemblies
            while ignoring MVC assemblies.
            </summary>
            <returns>A set of <see cref="T:Microsoft.Extensions.PlatformAbstractions.Library"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.DefaultTypeActivatorCache">
            <summary>
            Caches <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory"/> instances produced by 
            <see cref="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.DefaultTypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider">
             <summary>
             Provides the currently cached collection of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor"/>.
             </summary>
             <remarks>
             The default implementation, does not update the cache, it is up to the user
             to create or use an implementation that can update the available actions in
             the application. The implementor is also responsible for updating the
             <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.Version"/> in a thread safe way.
            
             Default consumers of this service, are aware of the version and will recache
             data as appropriate, but rely on the version being unique.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider.ActionDescriptors">
            <summary>
            Returns the current cached <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider">
            <summary>
            Specifies the contract for discovering assemblies that may contain Mvc specific types such as controllers,
            view components and precompiled views.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider.CandidateAssemblies">
            <summary>
            Gets the sequence of candidate <see cref="T:System.Reflection.Assembly"/> instances that the application
            uses for discovery of Mvc specific types.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.IHttpResponseStreamWriterFactory">
            <summary>
            Creates <see cref="T:System.IO.TextWriter"/> instances for writing to <see cref="P:Microsoft.AspNet.Http.HttpResponse.Body"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/>, usually <see cref="P:Microsoft.AspNet.Http.HttpResponse.Body"/>.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/>, usually <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A <see cref="T:System.IO.TextWriter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider">
            <summary>
            An interface for metadata which provides <see cref="T:Microsoft.AspNet.Mvc.Routing.RouteDataActionConstraint"/> values
            for a controller or action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.RouteKey">
            <summary>
            The route value key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.RouteKeyHandling">
            <summary>
            The <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.RouteKeyHandling"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.RouteValue">
            <summary>
            The expected route value. Will be null unless <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.RouteKeyHandling"/> is
            set to <see cref="F:Microsoft.AspNet.Mvc.Routing.RouteKeyHandling.RequireKey"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteConstraintProvider.BlockNonAttributedActions">
            <summary>
            Set to true to negate this constraint on all actions that do not define a behavior for this route key.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.IRouteTemplateProvider">
            <summary>
            Interface for attributes which can supply a route template for attribute routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteTemplateProvider.Template">
            <summary>
            The route template. May be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteTemplateProvider.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets a default value of 0.
            A null value for the Order property means that the user didn't specify an explicit order for the
            route.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.IRouteTemplateProvider.Name">
            <summary>
            Gets the route name. The route name can be used to generate a link using a specific route, instead
             of relying on selection of a route based on the given set of route values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.ITypeActivatorCache">
            <summary>
            Caches <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory"/> instances produced by 
            <see cref="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)">
            <summary>
            Creates an instance of <typeparamref name="TInstance"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> used to resolve dependencies for
            <paramref name="implementationType"/>.</param>
            <param name="implementationType">The <see cref="T:System.Type"/> of the <typeparamref name="TInstance"/> to create.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/> that uses pooled buffers.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize">
            <summary>
            The default size of created char buffers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.#ctor(Microsoft.Extensions.MemoryPool.IArraySegmentPool{System.Byte},Microsoft.Extensions.MemoryPool.IArraySegmentPool{System.Char})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory"/>.
            </summary>
            <param name="bytePool">
            The <see cref="T:Microsoft.Extensions.MemoryPool.IArraySegmentPool`1"/> for creating <see cref="T:System.Byte"/> buffers.
            </param>
            <param name="charPool">
            The <see cref="T:Microsoft.Extensions.MemoryPool.IArraySegmentPool`1"/> for creating <see cref="T:System.Char"/> buffers.
            </param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor">
            <summary>
            Executes an <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/> to write to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.#ctor(Microsoft.Extensions.OptionsModel.IOptions{Microsoft.AspNet.Mvc.MvcOptions},Microsoft.AspNet.Mvc.Infrastructure.IActionBindingContextAccessor,Microsoft.AspNet.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor"/>.
            </summary>
            <param name="options">An accessor to <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.</param>
            <param name="bindingContextAccessor">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionBindingContextAccessor"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.BindingContext">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ActionBindingContext"/> for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.OptionsFormatters">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> instances from <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.RespectBrowserAcceptHeader">
            <summary>
            Gets the value of <see cref="P:Microsoft.AspNet.Mvc.MvcOptions.RespectBrowserAcceptHeader"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.WriterFactory">
            <summary>
            Gets the writer factory delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.ExecuteAsync(Microsoft.AspNet.Mvc.ActionContext,Microsoft.AspNet.Mvc.ObjectResult)">
            <summary>
            Executes the <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ActionContext"/> for the current request.</param>
            <param name="result">The <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which will complete once the <see cref="T:Microsoft.AspNet.Mvc.ObjectResult"/> is written to the response.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.SelectFormatter(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext,System.Collections.Generic.IList{Microsoft.Net.Http.Headers.MediaTypeHeaderValue},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Formatters.IOutputFormatter})">
            <summary>
            Selects the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> to write the response.
            </summary>
            <param name="formatterContext">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext"/>.</param>
            <param name="contentTypes">
            The list of content types provided by <see cref="P:Microsoft.AspNet.Mvc.ObjectResult.ContentTypes"/>.
            </param>
            <param name="formatters">
            The list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> instances to consider.
            </param>
            <returns>
            The selected <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> or <c>null</c> if no formatter can write the response.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.SelectFormatterNotUsingAcceptHeaders(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Formatters.IOutputFormatter})">
            <summary>
            Selects the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> to write the response. The first formatter which
            can write the response should be chosen without any consideration for content type.
            </summary>
            <param name="formatterContext">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext"/>.</param>
            <param name="formatters">
            The list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> instances to consider.
            </param>
            <returns>
            The selected <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> or <c>null</c> if no formatter can write the response.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.SelectFormatterUsingSortedAcceptHeaders(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Formatters.IOutputFormatter},System.Collections.Generic.IEnumerable{Microsoft.Net.Http.Headers.MediaTypeHeaderValue})">
            <summary>
            Selects the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> to write the response based on the content type values
            present in <paramref name="sortedAcceptHeaders"/>.
            </summary>
            <param name="formatterContext">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext"/>.</param>
            <param name="formatters">
            The list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> instances to consider.
            </param>
            <param name="sortedAcceptHeaders">
            The ordered content types from the <c>Accept</c> header, sorted by descending q-value.
            </param>
            <returns>
            The selected <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> or <c>null</c> if no formatter can write the response.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.ObjectResultExecutor.SelectFormatterUsingAnyAcceptableContentType(Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Formatters.IOutputFormatter},System.Collections.Generic.IEnumerable{Microsoft.Net.Http.Headers.MediaTypeHeaderValue})">
            <summary>
            Selects the <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> to write the response based on the content type values
            present in <paramref name="acceptableContentTypes"/>.
            </summary>
            <param name="formatterContext">The <see cref="T:Microsoft.AspNet.Mvc.Formatters.OutputFormatterWriteContext"/>.</param>
            <param name="formatters">
            The list of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> instances to consider.
            </param>
            <param name="acceptableContentTypes">
            The ordered content types from <see cref="P:Microsoft.AspNet.Mvc.ObjectResult.ContentTypes"/> in descending priority order.
            </param>
            <returns>
            The selected <see cref="T:Microsoft.AspNet.Mvc.Formatters.IOutputFormatter"/> or <c>null</c> if no formatter can write the response.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute">
             <summary>
             An attribute which specifies a required route value for an action or controller.
            
             When placed on an action, the route data of a request must match the expectations of the route
             constraint in order for the action to be selected. See <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteKeyHandling"/> for
             the expectations that must be satisfied by the route data.
            
             When placed on a controller, unless overridden by the action, the constraint applies to all
             actions defined by the controller.
             </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.#ctor(System.String,Microsoft.AspNet.Mvc.Routing.RouteKeyHandling)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute"/>.
            </summary>
            <param name="routeKey">The route value key.</param>
            <param name="keyHandling">
            The <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteKeyHandling"/> value. Must be <see cref="F:Microsoft.AspNet.Mvc.Routing.RouteKeyHandling.CatchAll"/>
            or <see cref="F:Microsoft.AspNet.Mvc.Routing.RouteKeyHandling.DenyKey"/>.
            </param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute"/> with
            <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteKeyHandling"/> set to <see cref="F:Microsoft.AspNet.Mvc.Routing.RouteKeyHandling.RequireKey"/>.
            </summary>
            <param name="routeKey">The route value key.</param>
            <param name="routeValue">The expected route value.</param>
            <param name="blockNonAttributedActions">
            Set to true to negate this constraint on all actions that do not define a behavior for this route key.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteKey">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteKeyHandling">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.RouteValue">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.RouteConstraintAttribute.BlockNonAttributedActions">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Infrastructure.StaticAssemblyProvider">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IAssemblyProvider"/> with a fixed set of candidate assemblies. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Infrastructure.StaticAssemblyProvider.CandidateAssemblies">
            <summary>
            Gets the list of candidate assemblies.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.MvcCoreMvcOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.MvcCoreRouteOptionsSetup">
            <summary>
            Sets up MVC default options for <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.MvcCoreRouteOptionsSetup.ConfigureRouting(Microsoft.AspNet.Routing.RouteOptions)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.MvcMarkerService">
            <summary>
            This is a Marker class which is used to determine if all the services were added
            to when Mvc is loaded.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.MvcServicesHelper">
            <summary>
            Helper class which contains MvcServices related helpers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.MvcServicesHelper.ThrowIfMvcNotRegistered(System.IServiceProvider)">
            <summary>
            Throws InvalidOperationException when MvcMarkerService is not present
            in the list of services.
            </summary>
            <param name="services">The list of services.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Internal.NonDisposableStream">
            <summary>
            Stream that delegates to an inner stream.
            This Stream is present so that the inner stream is not closed
            even when Close() or Dispose() is called.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNet.Mvc.Internal.NonDisposableStream"/>.
            </summary>
            <param name="innerStream">The stream which should not be closed or flushed.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.InnerStream">
            <summary>
            The inner stream this object delegates to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Length">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Position">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.ReadTimeout">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.CanTimeout">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.WriteTimeout">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.EndRead(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.ReadByte">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.WriteByte(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Close">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Internal.NonDisposableStream.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.TaskCache.CompletedTask">
            <summary>Gets a task that's already been completed successfully.</summary>
            <remarks>May not always return the same instance.</remarks>        
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Internal.TaskCache`1.DefaultCompletedTask">
            <summary>
            Gets a completed <see cref="T:System.Threading.Tasks.Task"/> with the value of <c>default(T)</c>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation for binding array values.
            </summary>
            <typeparam name="TElement">Type of elements in the array.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1.CanCreateInstance(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1.CreateEmptyCollection(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ArrayModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.BinderTypeBasedModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> which can bind a model based on the value of 
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.BinderType"/>. The supplied <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> 
            type will be used to bind the model.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider">
            <summary>
            A value provider which provides data from a specific <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource"/>.
            </summary>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider"/> is an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> base-implementation which
            can provide data for all parameters and model properties which specify the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>.
            </para>
            <para>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider"/> implements <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IBindingSourceValueProvider"/> and will
            include or exclude itself from the set of value providers based on the model's associated
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>. Value providers are by-default included; if a model does not
            specify a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/> then all value providers are valid.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.BindingSource)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider"/>.
            </summary>
            <param name="bindingSource">
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>. Must be a single-source (non-composite) with
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.BindingSource.IsGreedy"/> equal to <c>false</c>.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource">
            <summary>
            Gets the corresponding <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BindingSourceValueProvider.Filter(Microsoft.AspNet.Mvc.ModelBinding.BindingSource)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.BodyModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> which binds models from the request body using an <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/>
            when a model has the binding source <see cref="F:Microsoft.AspNet.Mvc.ModelBinding.BindingSource.Body"/>/
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BodyModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.BodyModelBinder.BindModelCoreAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Attempts to bind the model using formatters.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> which when completed returns a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingResult"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ByteArrayModelBinder">
            <summary>
            ModelBinder to bind Byte Arrays.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ByteArrayModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.CancellationTokenModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation to bind models of type <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CancellationTokenModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation for binding collection values.
            </summary>
            <typeparam name="TElement">Type of elements in the collection.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.CanCreateInstance(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.CreateEmptyCollection(System.Type)">
            <summary>
            Create an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>An <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.</returns>
            <remarks>Called when creating a default 'empty' model for a top level bind.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.CreateInstance(System.Type)">
            <summary>
            Create an instance of <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>An instance of <paramref name="targetType"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Gets an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/> that contains members from
            <paramref name="collection"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <param name="collection">
            Collection of values retrieved from value providers. Or <c>null</c> if nothing was bound.
            </param>
            <returns>
            An <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>. Or <c>null</c> if nothing was bound.
            </returns>
            <remarks>
            Extensibility point that allows the bound collection to be manipulated or transformed before being
            returned from the binder.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds values from <paramref name="sourceCollection"/> to given <paramref name="target"/>.
            </summary>
            <param name="target"><see cref="T:System.Object"/> into which values are copied.</param>
            <param name="sourceCollection">
            Collection of values retrieved from value providers. Or <c>null</c> if nothing was bound.
            </param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeModelBinder">
            <summary>
            Represents an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> that delegates to one of a collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/>
            instances.
            </summary>
            <remarks>
            If no binder is available and the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/> allows it,
            this class tries to find a binder using an empty prefix.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ModelBinding.IModelBinder})">
            <summary>
            Initializes a new instance of the CompositeModelBinder class.
            </summary>
            <param name="modelBinders">A collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> instances.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.CompositeModelBinder.ModelBinders">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider">
            <summary>
            Represents a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> whose values come from a collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.Mvc.ModelBinding.IValueProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider"/>.
            </summary>
            <param name="valueProviders">The sequence of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> to add to this instance of
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ModelBinding.IValueProviderFactory},Microsoft.AspNet.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider"/> from the provided <paramref name="context"/>
            and <paramref name="factories"/>.
            </summary>
            <param name="factories">The set of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProviderFactory"/> instances.</param>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderFactoryContext"/>.</param>
            <returns>
            A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider"/> containing all <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> instances
            created.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.InsertItem(System.Int32,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.SetItem(System.Int32,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.CompositeValueProvider.Filter(Microsoft.AspNet.Mvc.ModelBinding.BindingSource)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.DefaultPropertyBindingPredicateProvider`1">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IPropertyBindingPredicateProvider"/>.
            Provides a expression based way to provide include properties.
            </summary>
            <typeparam name="TModel">The target model Type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.DefaultPropertyBindingPredicateProvider`1.Prefix">
            <summary>
            The prefix which is used while generating the property filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.DefaultPropertyBindingPredicateProvider`1.PropertyIncludeExpressions">
            <summary>
            Expressions which can be used to generate property filter which can filter model 
            properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.DefaultPropertyBindingPredicateProvider`1.PropertyFilter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an
            <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.BindingSource,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.DictionaryModelBinder`2">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation for binding dictionary values.
            </summary>
            <typeparam name="TKey">Type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">Type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryModelBinder`2.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryModelBinder`2.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.DictionaryModelBinder`2.CreateEmptyCollection(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.FormCollectionModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation to bind form values to <see cref="T:Microsoft.AspNet.Http.IFormCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.FormCollectionModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.FormFileModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation to bind posted files to <see cref="T:Microsoft.AspNet.Http.IFormFile"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.FormFileModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.HeaderModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> which binds models from the request headers when a model
            has the binding source <see cref="F:Microsoft.AspNet.Mvc.ModelBinding.BindingSource.Header"/>/
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.HeaderModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.IBindingSourceValueProvider">
            <summary>
            A value provider which can filter its contents based on <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>.
            </summary>
            <remarks>
            Value providers are by-default included. If a model does not specify a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>
            then all value providers are valid.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(Microsoft.AspNet.Mvc.ModelBinding.BindingSource)">
            <summary>
            Filters the value provider based on <paramref name="bindingSource"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/> associated with a model.</param>
            <returns>
            The filtered value provider, or <c>null</c> if the value provider does not match
            <paramref name="bindingSource"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ICollectionModelBinder">
            <summary>
            Interface for model binding collections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ICollectionModelBinder.CanCreateInstance(System.Type)">
            <summary>
            Gets an indication whether or not this <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ICollectionModelBinder"/> implementation can create
            an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ICollectionModelBinder"/> implementation can create an <see cref="T:System.Object"/>
            assignable to <paramref name="targetType"/>; <c>false</c> otherwise.
            </returns>
            <remarks>
            A <c>true</c> return value is necessary for successful model binding if model is initially <c>null</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ICompositeModelBinder">
            <summary>
            Represents an aggregate of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> that delegates to one of the instances for model binding.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ICompositeValueProviderFactory">
            <summary>
            Represents an aggregate of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProviderFactory"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.JQueryFormValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> for form data stored in an <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.JQueryFormValueProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.BindingSource,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.DictionaryBasedValueProvider"/> class.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="valuesFactory">A delegate which provides the values to wrap.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.JQueryFormValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.JQueryFormValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.JQueryFormValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.IModelBinder,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.Formatters.IInputFormatter},Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider)">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinder"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="validatorProvider"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNet.Http.HttpContext"/> for the current executing request.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> used for maintaining state and
            results of model-binding validation.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="inputFormatters">
            The set of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/> instances for deserializing the body.
            </param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> used for executing validation
            on the model instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.IModelBinder,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.Formatters.IInputFormatter},Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinder"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="validatorProvider"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNet.Http.HttpContext"/> for the current executing request.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> used for maintaining state and
            results of model-binding validation.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="inputFormatters">
            The set of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/> instances for deserializing the body.
            </param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> used for executing validation
            on the model
            instance.</param>
            <param name="includeExpressions">Expression(s) which represent top level properties
            which need to be included for the current model.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.IModelBinder,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.Formatters.IInputFormatter},Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,System.Func{Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,System.String,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinder"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="validatorProvider"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNet.Http.HttpContext"/> for the current executing request.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> used for maintaining state and
            results of model-binding validation.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="inputFormatters">
            The set of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/> instances for deserializing the body.
            </param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> used for executing validation
            on the model instance.</param>
            <param name="predicate">A predicate which can be used to
            filter properties(for inclusion/exclusion) at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.IModelBinder,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.Formatters.IInputFormatter},Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider)">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinder"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="validatorProvider"/>.
            </summary>
            <param name="model">The model instance to update and validate.</param>
            <param name="modelType">The type of model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNet.Http.HttpContext"/> for the current executing request.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> used for maintaining state and
            results of model-binding validation.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="inputFormatters">
            The set of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/> instances for deserializing the body.
            </param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> used for executing validation
            on the model instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.IModelBinder,Microsoft.AspNet.Mvc.ModelBinding.IValueProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.Formatters.IInputFormatter},Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,System.Func{Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,System.String,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinder"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="validatorProvider"/>.
            </summary>
            <param name="model">The model instance to update and validate.</param>
            <param name="modelType">The type of model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNet.Http.HttpContext"/> for the current executing request.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> used for maintaining state and
            results of model-binding validation.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="inputFormatters">
            The set of <see cref="T:Microsoft.AspNet.Mvc.Formatters.IInputFormatter"/> instances for deserializing the body.
            </param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> used for executing validation
            on the model instance.</param>
            <param name="predicate">A predicate which can be used to
            filter properties(for inclusion/exclusion) at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.GetIncludePredicateExpression``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Creates an expression for a predicate to limit the set of properties used in model binding.
            </summary>
            <typeparam name="TModel">The model type.</typeparam>
            <param name="prefix">The model prefix.</param>
            <param name="expressions">Expressions identifying the properties to allow for binding.</param>
            <returns>An expression which can be used with <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IPropertyBindingPredicateProvider"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,System.String)">
            <summary>
            Clears <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/> entries for <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="modelMetadata">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="modelKey">The entry to clear. </param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.ConvertTo``1(System.Object)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <typeparamref name="T"/>
            using the <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> for conversion.</typeparam>
            <param name="value">The value to convert."/></param>
            <returns>
            The converted value or the default value of <typeparamref name="T"/> if the value could not be converted.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> for conversion.</typeparam>
            <param name="value">The value to convert."/></param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> for conversion.</param>
            <returns>
            The converted value or the default value of <typeparamref name="T"/> if the value could not be converted.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <param name="type"/>
            using the <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="value">The value to convert."/></param>
            <param name="type">The <see cref="T:System.Type"/> for conversion.</param>
            <returns>
            The converted value or <c>null</c> if the value could not be converted.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <paramref name="type"/>.
            </summary>
            <param name="value">The value to convert."/></param>
            <param name="type">The <see cref="T:System.Type"/> for conversion.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> for conversion.</param>
            <returns>
            The converted value or <c>null</c> if the value could not be converted.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadataProviderExtensions">
            <summary>
            Extensions methods for <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadataProviderExtensions.GetMetadataForProperty(Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,System.Type,System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for property identified by the provided
            <paramref name="containerType"/> and <paramref name="propertyName"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="containerType">The <see cref="T:System.Type"/> for which the property is defined.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for the property.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> implementation for binding complex values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.CanUpdateProperty(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Gets an indication whether a property with the given <paramref name="propertyMetadata"/> can be updated.
            </summary>
            <param name="propertyMetadata"><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for the property of interest.</param>
            <returns><c>true</c> if the property can be updated; <c>false</c> otherwise.</returns>
            <remarks>Should return <c>true</c> only for properties <see cref="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.SetProperty(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNet.Mvc.ModelBinding.ModelBindingResult)"/> can update.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.CreateModel(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Creates suitable <see cref="T:System.Object"/> for given <paramref name="bindingContext"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>An <see cref="T:System.Object"/> compatible with <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.GetModel(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Get <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext.Model"/> if that property is not <c>null</c>. Otherwise activate a
            new instance of <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.GetMetadataForProperties(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Gets the collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for properties this binder should update.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>Collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for properties this binder should update.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.SetProperty(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNet.Mvc.ModelBinding.ModelBindingResult)">
            <summary>
            Updates a property in the current <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext.Model"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <param name="metadata">
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for the model containing property to set.
            </param>
            <param name="propertyMetadata">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> for the property to set.</param>
            <param name="result">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelBindingResult"/> for the property's new value.</param>
            <remarks>Should succeed in all cases that <see cref="M:Microsoft.AspNet.Mvc.ModelBinding.MutableObjectModelBinder.CanUpdateProperty(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata)"/> returns <c>true</c>.</remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.PrefixContainer">
            <summary>
            This is a container for prefix values. It normalizes all the values into dotted-form and then stores
            them in a sorted array. All queries for prefixes are also normalized to dotted-form, and searches
            for ContainsPrefix are done with a binary search.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.PrefixContainer.ToArrayWithoutNulls``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Convert an ICollection to an array, removing null values. Fast path for case where
            there are no null values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.QueryStringValueProviderFactory">
            <summary>
            A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProviderFactory"/> that creates <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> instances that
            read values from the request query-string.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.QueryStringValueProviderFactory.GetValueProviderAsync(Microsoft.AspNet.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ReadableStringCollectionValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an <see cref="T:Microsoft.AspNet.Http.IReadableStringCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ReadableStringCollectionValueProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.BindingSource,Microsoft.AspNet.Http.IReadableStringCollection,System.Globalization.CultureInfo)">
            <summary>
            Creates a provider for <see cref="T:Microsoft.AspNet.Http.IReadableStringCollection"/> wrapping an existing set of key value pairs.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/> for the data.</param>
            <param name="values">The key value pairs to wrap.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ReadableStringCollectionValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ReadableStringCollectionValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ReadableStringCollectionValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ServicesModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelBinder"/> which binds models from the request services when a model 
            has the binding source <see cref="F:Microsoft.AspNet.Mvc.ModelBinding.BindingSource.Services"/>/
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ServicesModelBinder.BindModelAsync(Microsoft.AspNet.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResultExtensions">
            <summary>
            Extensions methods for <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResult)">
            <summary>
            Attempts to convert the values in <paramref name="result"/> to the specified type.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> for conversion.</typeparam>
            <param name="result">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResult"/>.</param>
            <returns>
            The converted value, or the default value of <typeparamref name="T"/> if the value could not be converted.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResult,System.Type)">
            <summary>
            Attempts to convert the values in <paramref name="result"/> to the specified type.
            </summary>
            <param name="result">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ValueProviderResult"/>.</param>
            <param name="type">The <see cref="T:System.Type"/> for conversion.</param>
            <returns>
            The converted value, or the default value of <paramref name="type"/> if the value could not be converted.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata">
            <summary>
            Binding metadata details for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.BindingSource">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.BindingSource"/>.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.BindingSource"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.BinderModelName">
            <summary>
            Gets or sets the binder model name. If <c>null</c> the property or parameter name will be used.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.BinderModelName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.BinderType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the model binder used to bind the model.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.BinderType"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.IsBindingAllowed">
            <summary>
            Gets or sets a value indicating whether or not the property can be model bound.
            Will be ignored if the model metadata being created does not represent a property.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsBindingAllowed"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.IsBindingRequired">
            <summary>
            Gets or sets a value indicating whether or not the request must contain a value for the model.
            Will be ignored if the model metadata being created does not represent a property.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the model is read-only. Will be ignored
            if the model metadata being created is not a property. If <c>null</c> then
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsReadOnly"/> will be  computed based on the accessibility
            of the property accessor and model <see cref="T:System.Type"/>. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsReadOnly"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.ModelBindingMessageProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/> instance. See
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata.PropertyBindingPredicateProvider">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IPropertyBindingPredicateProvider"/>.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.PropertyBindingPredicateProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext">
            <summary>
            A context for an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.BindingMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultBindingMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultBindingMetadataProvider.GetBindingMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider"/>.
            </summary>
            <param name="providers">The set of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/> instances.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.GetBindingMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.GetDisplayMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.GetValidationMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails">
            <summary>
            Holds associated metadata objects for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
            <remarks>
            Any modifications to the data must be thread-safe for multiple readers and writers.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.</param>
            <param name="attributes">The set of model attributes.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.ModelAttributes">
            <summary>
            Gets or sets the set of model attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.BindingMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.DisplayMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.Key">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> entries for the model properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.PropertyGetter">
            <summary>
            Gets or sets a property getter delegate to get the property value from a model object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.PropertySetter">
            <summary>
            Gets or sets a property setter delegate to set the property value on a model object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.ValidationMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata">
            <summary>
            A default <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.#ctor(Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider,Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
            <param name="details">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Attributes">
            <summary>
            Gets the set of attributes for the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BindingMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidationMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.AdditionalValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BinderModelName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BinderType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ConvertEmptyStringToNull">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DataTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Description">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayFormatString">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EditFormatString">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ElementMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EnumGroupedDisplayNamesAndValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EnumNamesAndValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HasNonDefaultEditFormat">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HideSurroundingHtml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HtmlEncode">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsBindingAllowed">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsBindingRequired">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsEnum">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsFlagsEnum">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsRequired">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ModelBindingMessageProvider">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.NullDisplayText">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertyBindingPredicateProvider">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ShowForDisplay">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ShowForEdit">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.SimpleDisplayProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.TemplateHint">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidatorMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertyGetter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertySetter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider"/> based on reflection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"/>.
            </summary>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.DetailsProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForProperties(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreateModelMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> from a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.
            </summary>
            <param name="entry">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entry with cached data.</param>
            <returns>A new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> instance.</returns>
            <remarks>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"/> will always create instances of
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/> .Override this method to create a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>
            of a different concrete type.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreatePropertyDetails(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entries for the properties of a model
            <see cref="T:System.Type"/>.
            </summary>
            <param name="key">
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> identifying the model <see cref="T:System.Type"/>.
            </param>
            <returns>A details object for each property of the model <see cref="T:System.Type"/>.</returns>
            <remarks>
            The results of this method will be cached and used to satisfy calls to
            <see cref="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForProperties(System.Type)"/>. Override this method to provide a different
            set of property data.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreateTypeDetails(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entry for a model <see cref="T:System.Type"/>.
            </summary>
            <param name="key">
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> identifying the model <see cref="T:System.Type"/>.
            </param>
            <returns>A details object for the model <see cref="T:System.Type"/>.</returns>
            <remarks>
            The results of this method will be cached and used to satisfy calls to
            <see cref="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForType(System.Type)"/>. Override this method to provide a different
            set of attributes.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultValidationMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultValidationMetadataProvider.GetValidationMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata">
            <summary>
            Display metadata details for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues">
            <summary>
            Gets a set of additional values. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.AdditionalValues"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether or not empty strings should be treated as <c>null</c>.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ConvertEmptyStringToNull"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName">
            <summary>
            Gets or sets the name of the data type.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.DataTypeName"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.Description">
            <summary>
            Gets or sets a delegate which is used to get a value for the
            model description. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.Description"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString">
            <summary>
            Gets or sets a display format string for the model.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.DisplayFormatString"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName">
            <summary>
            Gets or sets a delegate delegate which is used to get a value for the
            display name of the model. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.DisplayName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString">
            <summary>
            Gets or sets an edit format string for the model.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.EditFormatString"/>
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/> instances that set this property to a non-<c>null</c>, non-empty,
            non-default value should also set <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat"/> to <c>true</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues">
            <summary>
            Gets the ordered and grouped display names and values of all <see cref="T:System.Enum"/> values in
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/>. See
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.EnumGroupedDisplayNamesAndValues"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues">
            <summary>
            Gets the names and values of all <see cref="T:System.Enum"/> values in
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/>. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.EnumNamesAndValues"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat">
            <summary>
            Gets or sets a value indicating whether or not the model has a non-default edit format.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.HasNonDefaultEditFormat"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml">
            <summary>
            Gets or sets a value indicating if the surrounding HTML should be hidden.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.HideSurroundingHtml"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode">
            <summary>
            Gets or sets a value indicating if the model value should be HTML encoded.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.HtmlEncode"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum">
            <summary>
            Gets a value indicating whether <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/> is for an
            <see cref="T:System.Enum"/>. See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsEnum"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum">
            <summary>
            Gets a value indicating whether <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/> is for an
            <see cref="T:System.Enum"/> with an associated <see cref="T:System.FlagsAttribute"/>. See
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsFlagsEnum"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText">
            <summary>
            Gets or sets the text to display when the model value is null.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.NullDisplayText"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.Order">
            <summary>
            Gets or sets the order.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.Order"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay">
            <summary>
            Gets or sets a value indicating whether or not to include in the model value in display.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ShowForDisplay"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit">
            <summary>
            Gets or sets a value indicating whether or not to include in the model value in an editor.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ShowForEdit"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty">
            <summary>
            Gets or sets a the property name of a model property to use for display.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.SimpleDisplayProperty"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint">
            <summary>
            Gets or sets a hint for location of a display or editor template.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.TemplateHint"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext">
            <summary>
            A context for and <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.DisplayMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadata"/> for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider.GetBindingMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <summary>
            Gets the values for properties of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/>. 
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider">
            <summary>
            A composite <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/> for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider.GetDisplayMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <summary>
            Gets the values for properties of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadata"/>. 
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider">
            <summary>
            Marker interface for a provider of metadata details about model objects. Implementations should
            implement one or more of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>, <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/>, 
            and <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/> for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider.GetValidationMetadata(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <summary>
            Gets the values for properties of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/>. 
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider">
            <summary>
            Read / write <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IModelBindingMessageProvider"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/> class based on
            <paramref name="originalProvider"/>.
            </summary>
            <param name="originalProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/> to duplicate.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.MissingBindRequiredValueAccessor">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.MissingKeyOrValueAccessor">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider.ValueMustNotBeNullAccessor">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata">
            <summary>
            Validation metadata details for a <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata.IsRequired">
            <summary>
            Gets or sets a value indicating whether or not the model is a required value. Will be ignored
            if the model metadata being created is not a property. If <c>null</c> then
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsRequired"/> will be computed based on the model <see cref="T:System.Type"/>.
            See <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.IsRequired"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata.ValidatorMetadata">
            <summary>
            Gets a list of metadata items for validators.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/> implementations should store metadata items
            in this list, to be consumed later by an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext">
            <summary>
            A context for an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.ValidationMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Metadata.ValidationMetadata"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes">
            <summary>
            Provides access to the  combined list of attributes associated a <see cref="T:System.Type"/> or property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes"/> for a <see cref="T:System.Type"/>.
            </summary>
            <param name="typeAttributes">The set of attributes for the <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes"/> for a property.
            </summary>
            <param name="propertyAttributes">The set of attributes for the property.</param>
            <param name="typeAttributes">
            The set of attributes for the property's <see cref="T:System.Type"/>. See <see cref="P:System.Reflection.PropertyInfo.PropertyType"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.Attributes">
            <summary>
            Gets the set of all attributes. If this instance represents the attributes for a property, the attributes
            on the property definition are before those on the property's <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.PropertyAttributes">
            <summary>
            Gets the set of attributes on the property, or <c>null</c> if this instance represents the attributes
            for a <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.TypeAttributes">
            <summary>
            Gets the set of attributes on the <see cref="T:System.Type"/>. If this instance represents a property,
            then <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.TypeAttributes"/> contains attributes retrieved from
            <see cref="P:System.Reflection.PropertyInfo.PropertyType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Gets the attributes for the given <paramref name="property"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> in which caller found <paramref name="property"/>.
            </param>
            <param name="property">A <see cref="T:System.Reflection.PropertyInfo"/> for which attributes need to be resolved.
            </param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the property.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)">
            <summary>
            Gets the attributes for the given <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which attributes need to be resolved.
            </param>
            <returns>A <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider">
            <summary>
            Aggregate of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/>s that delegates to its underlying providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ModelBinding.Validation.IClientModelValidatorProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider"/>.
            </summary>
            <param name="providers">
            A collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> instances.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.ValidatorProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.GetValidators(Microsoft.AspNet.Mvc.ModelBinding.Validation.ClientValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider">
            <summary>
            Aggregate of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s that delegates to its underlying providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider"/>.
            </summary>
            <param name="providers">
            A collection of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> instances.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.ValidatorProviders">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.GetValidators(Microsoft.AspNet.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a collection.
            </summary>
            <remarks>
            This implementation handles cases like:
            <example>
                Model: IList&lt;Student&gt; 
                Query String: ?students[0].Age=8&amp;students[1].Age=9
            
                In this case the elements of the collection are identified in the input data set by an incrementing
                integer index.
            </example>
            
            or:
            
            <example>
                Model: IDictionary&lt;string, int&gt; 
                Query String: ?students[0].Key=Joey&amp;students[0].Value=8
            
                In this case the dictionary is treated as a collection of key-value pairs, and the elements of the
                collection are identified in the input data set by an incrementing integer index.
            </example>
            
            Using this key format, the enumerator enumerates model objects of type matching
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ElementMetadata"/>. The indices of the elements in the collection are used to
            compute the model prefix keys.
            </remarks>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy.Instance">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy.GetChildren(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a complex object.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy.Instance">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy.GetChildren(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider">
            <summary>
            A default <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider"/> provides validators from <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidator"/>
            instances in <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider.GetValidators(Microsoft.AspNet.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultObjectValidator">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultObjectValidator.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter},Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultObjectValidator"/>.
            </summary>
            <param name="excludeFilters"><see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/>s that determine
            types to exclude from validation.</param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultObjectValidator.Validate(Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeBasedExcludeFilter">
            <summary>
            Provides an implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/> which can filter
            based on a type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeBasedExcludeFilter.#ctor(System.Type)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeBasedExcludeFilter"/>.
            </summary>
            <param name="type">The type which needs to be excluded.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeBasedExcludeFilter.ExcludedType">
            <summary>
            Gets the type which is excluded from validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeBasedExcludeFilter.IsTypeExcluded(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeNameBasedExcludeFilter">
            <summary>
            Provides an implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/> which can filter
            based on a type full name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeNameBasedExcludeFilter.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeNameBasedExcludeFilter"/>
            </summary>
            <param name="typeFullName">Fully qualified name of the type which needs to be excluded.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeNameBasedExcludeFilter.ExcludedTypeName">
            <summary>
            Gets the type full name which is excluded from validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.DefaultTypeNameBasedExcludeFilter.IsTypeExcluded(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExcludeTypeValidationFilterCollection.Add(System.Type)">
            <summary>
            Adds an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/> that excludes the properties of 
            the <see cref="T:System.Type"/> specified and its derived types from validaton.
            </summary>
            <param name="type"><see cref="T:System.Type"/> which should be excluded from validation.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExcludeTypeValidationFilterCollection.Add(System.String)">
            <summary>
            Adds an <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/> that excludes the properties of 
            the <see cref="T:System.Type"/> specified and its derived types from validaton.
            </summary>
            <param name="typeFullName">Full name of the type which should be excluded from validation.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a collection bound using 'explict indexing'
            style keys.
            </summary>
            <remarks>
            This implemenation handles cases like:
            <example>
                Model: IList&lt;Student&gt; 
                Query String: ?students.index=Joey,Katherine&amp;students[Joey].Age=8&amp;students[Katherine].Age=9
            
                In this case, 'Joey' and 'Katherine' need to be used in the model prefix keys, but cannot be inferred
                form inspecting the collection. These prefixes are captured during model binding, and mapped to 
                the corresponding ordinal index of a model object in the collection. The enumerator returned from this
                class will yield two 'Student' objects with corresponding keys 'students[Joey]' and 'students[Katherine]'.
            </example>
            
            Using this key format, the enumerator enumerates model objects of type matching
            <see cref="P:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata.ElementMetadata"/>. The keys captured during model binding are mapped to the elements
            in the collection to compute the model prefix keys.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy"/>.
            </summary>
            <param name="elementKeys">The keys of collection elements that were used during model binding.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.ElementKeys">
            <summary>
            Gets the keys of collection elements that were used during model binding.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.GetChildren(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter">
            <summary>
            Provides an interface which is used to determine if <see cref="T:System.Type"/>s are excluded from model validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter.IsTypeExcluded(System.Type)">
            <summary>
            Determines if the given type is excluded from validation.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which the check is to be performed.</param>
            <returns>True if the type is to be excluded. False otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator">
            <summary>
            Provides methods to validate an object graph.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.IObjectModelValidator.Validate(Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)">
            <summary>
            Validates the provided object.
            </summary>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/>.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>. May be null.</param>
            <param name="prefix">
            The model prefix. Used to map the model object to entries in <paramref name="modelState"/>.
            </param>
            <param name="model">The model object.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a dictionary bound with 'short form' style keys.
            </summary>
            <typeparam name="TKey">The <see cref="T:System.Type"/> of the keys of the model dictionary.</typeparam>
            <typeparam name="TValue">The <see cref="T:System.Type"/> of the values of the model dictionary.</typeparam>
            <remarks>
            This implemenation handles cases like:
            <example>
                Model: IDictionary&lt;string, Student&gt; 
                Query String: ?students[Joey].Age=8&amp;students[Katherine].Age=9
            
                In this case, 'Joey' and 'Katherine' are the keys of the dictionary, used to bind two 'Student'
                objects. The enumerator returned from this class will yield two 'Student' objects with corresponding
                keys 'students[Joey]' and 'students[Katherine]'
            </example>
            
            Using this key format, the enumerator enumerates model objects of type <typeparamref name="TValue"/>. The
            keys of the dictionary are not validated as they must be simple types.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2"/>.
            </summary>
            <param name="keyMappings">The mapping from model prefix key to dictionary key.</param>
            <param name="valueMetadata">
            The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> associated with <typeparamref name="TValue"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.KeyMappings">
            <summary>
            Gets the mapping from model prefix key to dictionary key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.GetChildren(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.SimpleTypesExcludeFilter">
            <summary>
            Identifies the simple types that the default model binding validation will exclude.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.SimpleTypesExcludeFilter.IsTypeExcluded(System.Type)">
            <summary>
            Returns true if the given type will be excluded from the default model validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.SimpleTypesExcludeFilter.IsSimpleType(System.Type)">
            <summary>
            Returns true if the given type is the underlying types that <see cref="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.SimpleTypesExcludeFilter.IsTypeExcluded(System.Type)"/> will exclude.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationVisitor">
            <summary>
            A visitor implementation that interprets <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary"/> to traverse
            a model object graph and perform validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationVisitor.#ctor(Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider,System.Collections.Generic.IList{Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter},Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationVisitor"/>.
            </summary>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
            <param name="excludeFilters">The list of <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.IExcludeTypeValidationFilter"/>.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelStateDictionary"/>.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <summary>
            Validates a object.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNet.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="key">The model prefix key.</param>
            <param name="model">The model object.</param>
            <returns><c>true</c> if the object is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ModelBinding.Validation.ValidationVisitor.ValidateNode">
            <summary>
            Validates a single node in a model object graph.
            </summary>
            <returns><c>true</c> if the node is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.MatchAllContentTypeIsNotAllowed">
            <summary>
            The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatMatchAllContentTypeIsNotAllowed(System.Object)">
            <summary>
            The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ObjectResult_MatchAllContentType">
            <summary>
            The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatObjectResult_MatchAllContentType(System.Object,System.Object)">
            <summary>
            The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionExecutor_WrappedTaskInstance">
            <summary>
            The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionExecutor_WrappedTaskInstance(System.Object,System.Object,System.Object)">
            <summary>
            The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionExecutor_UnexpectedTaskInstance">
            <summary>
            The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionExecutor_UnexpectedTaskInstance(System.Object,System.Object)">
            <summary>
            The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionInvokerFactory_CouldNotCreateInvoker">
            <summary>
            An action invoker could not be created for action '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionInvokerFactory_CouldNotCreateInvoker(System.Object)">
            <summary>
            An action invoker could not be created for action '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionDescriptorMustBeBasedOnControllerAction">
            <summary>
            The action descriptor must be of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionDescriptorMustBeBasedOnControllerAction(System.Object)">
            <summary>
            The action descriptor must be of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ArgumentCannotBeNullOrEmpty">
            <summary>
            Value cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatArgumentCannotBeNullOrEmpty">
            <summary>
            Value cannot be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.PropertyOfTypeCannotBeNull">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatPropertyOfTypeCannotBeNull(System.Object,System.Object)">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TypeMethodMustReturnNotNullValue">
            <summary>
            The '{0}' method of type '{1}' cannot return a null value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTypeMethodMustReturnNotNullValue(System.Object,System.Object)">
            <summary>
            The '{0}' method of type '{1}' cannot return a null value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinding_NullValueNotValid">
            <summary>
            The value '{0}' is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinding_NullValueNotValid(System.Object)">
            <summary>
            The value '{0}' is invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Invalid_IncludePropertyExpression">
            <summary>
            The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatInvalid_IncludePropertyExpression(System.Object)">
            <summary>
            The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.NoRoutesMatched">
            <summary>
            No route matches the supplied values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatNoRoutesMatched">
            <summary>
            No route matches the supplied values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AsyncActionFilter_InvalidShortCircuit">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAsyncActionFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AsyncResultFilter_InvalidShortCircuit">
            <summary>
            If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAsyncResultFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.FilterFactoryAttribute_TypeMustImplementIFilter">
            <summary>
            The type provided to '{0}' must implement '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFilterFactoryAttribute_TypeMustImplementIFilter(System.Object,System.Object)">
            <summary>
            The type provided to '{0}' must implement '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionResult_ActionReturnValueCannotBeNull">
            <summary>
            Cannot return null from an action method with a return type of '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionResult_ActionReturnValueCannotBeNull(System.Object)">
            <summary>
            Cannot return null from an action method with a return type of '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TypeMustDeriveFromType">
            <summary>
            The type '{0}' must derive from '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTypeMustDeriveFromType(System.Object,System.Object)">
            <summary>
            The type '{0}' must derive from '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.InputFormatterNoEncoding">
            <summary>
            No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatInputFormatterNoEncoding(System.Object)">
            <summary>
            No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnsupportedContentType">
            <summary>
            Unsupported content type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnsupportedContentType(System.Object)">
            <summary>
            Unsupported content type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.OutputFormatterNoMediaType">
            <summary>
            No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatOutputFormatterNoMediaType(System.Object)">
            <summary>
            No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_AggregateErrorMessage">
            <summary>
            The following errors occurred with attribute routing information:{0}{0}{1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_AggregateErrorMessage(System.Object,System.Object)">
            <summary>
            The following errors occurred with attribute routing information:{0}{0}{1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_CannotContainParameter">
            <summary>
            The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_CannotContainParameter(System.Object,System.Object,System.Object)">
            <summary>
            The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_IndividualErrorMessage">
            <summary>
            For action: '{0}'{1}Error: {2}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_IndividualErrorMessage(System.Object,System.Object,System.Object)">
            <summary>
            For action: '{0}'{1}Error: {2}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_EmptyTokenNotAllowed">
            <summary>
            An empty replacement token ('[]') is not allowed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_EmptyTokenNotAllowed">
            <summary>
            An empty replacement token ('[]') is not allowed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_ImbalancedSquareBrackets">
            <summary>
            Token delimiters ('[', ']') are imbalanced.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_ImbalancedSquareBrackets">
            <summary>
            Token delimiters ('[', ']') are imbalanced.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_InvalidSyntax">
            <summary>
            The route template '{0}' has invalid syntax. {1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_InvalidSyntax(System.Object,System.Object)">
            <summary>
            The route template '{0}' has invalid syntax. {1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_ReplacementValueNotFound">
            <summary>
            While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_ReplacementValueNotFound(System.Object,System.Object,System.Object)">
            <summary>
            While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_UnclosedToken">
            <summary>
            A replacement token is not closed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_UnclosedToken">
            <summary>
            A replacement token is not closed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_TokenReplacement_UnescapedBraceInToken">
            <summary>
            An unescaped '[' token is not allowed inside of a replacement token. Use '[[' to escape.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_UnescapedBraceInToken">
            <summary>
            An unescaped '[' token is not allowed inside of a replacement token. Use '[[' to escape.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.RouteConstraintAttribute_InvalidKeyHandlingValue">
            <summary>
            The value must be either '{0}' or '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatRouteConstraintAttribute_InvalidKeyHandlingValue(System.Object,System.Object)">
            <summary>
            The value must be either '{0}' or '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnableToFindServices">
            <summary>
            Unable to find the required services. Please add all the required services by calling '{0}' inside the call to '{1}' or '{2}' in the application startup code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnableToFindServices(System.Object,System.Object,System.Object)">
            <summary>
            Unable to find the required services. Please add all the required services by calling '{0}' inside the call to '{1}' or '{2}' in the application startup code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_DifferentLinkGenerationEntries_SameName">
            <summary>
            Two or more routes named '{0}' have different templates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_DifferentLinkGenerationEntries_SameName(System.Object)">
            <summary>
            Two or more routes named '{0}' have different templates.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_DuplicateNames_Item">
            <summary>
            Action: '{0}' - Template: '{1}'
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_DuplicateNames_Item(System.Object,System.Object)">
            <summary>
            Action: '{0}' - Template: '{1}'
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_DuplicateNames">
            <summary>
            Attribute routes with the same name '{0}' must have the same template:{1}{2}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_DuplicateNames(System.Object,System.Object,System.Object)">
            <summary>
            Attribute routes with the same name '{0}' must have the same template:{1}{2}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_AggregateErrorMessage_ErrorNumber">
            <summary>
            Error {0}:{1}{2}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_AggregateErrorMessage_ErrorNumber(System.Object,System.Object,System.Object)">
            <summary>
            Error {0}:{1}{2}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod">
            <summary>
            A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all attributes that constrain HTTP verbs.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod(System.Object,System.Object,System.Object)">
            <summary>
            A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all attributes that constrain HTTP verbs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item">
            <summary>
            Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item(System.Object,System.Object,System.Object)">
            <summary>
            Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AttributeRoute_NullTemplateRepresentation">
            <summary>
            (none)
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAttributeRoute_NullTemplateRepresentation">
            <summary>
            (none)
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.DefaultActionSelector_AmbiguousActions">
            <summary>
            Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatDefaultActionSelector_AmbiguousActions(System.Object,System.Object)">
            <summary>
            Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.FileResult_InvalidPath">
            <summary>
            Could not find file: {0}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFileResult_InvalidPath(System.Object)">
            <summary>
            Could not find file: {0}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.SerializableError_DefaultError">
            <summary>
            The input was not valid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatSerializableError_DefaultError">
            <summary>
            The input was not valid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AsyncResourceFilter_InvalidShortCircuit">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAsyncResourceFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ResponseCache_SpecifyDuration">
            <summary>
            If the '{0}' property is not set to true, '{1}' property must be specified.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatResponseCache_SpecifyDuration(System.Object,System.Object)">
            <summary>
            If the '{0}' property is not set to true, '{1}' property must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ApiExplorer_UnsupportedAction">
            <summary>
            The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatApiExplorer_UnsupportedAction(System.Object)">
            <summary>
            The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.FormatterMappings_NotValidMediaType">
            <summary>
            The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFormatterMappings_NotValidMediaType(System.Object)">
            <summary>
            The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Format_NotValid">
            <summary>
            The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFormat_NotValid(System.Object)">
            <summary>
            The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.CacheProfileNotFound">
            <summary>
            The '{0}' cache profile is not defined.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCacheProfileNotFound(System.Object)">
            <summary>
            The '{0}' cache profile is not defined.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelType_WrongType">
            <summary>
            The model's runtime type '{0}' is not assignable to the type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelType_WrongType(System.Object,System.Object)">
            <summary>
            The model's runtime type '{0}' is not assignable to the type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated">
            <summary>
            The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated(System.Object,System.Object)">
            <summary>
            The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.BinderType_MustBeIModelBinder">
            <summary>
            The type '{0}' must implement '{1}' to be used as a model binder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatBinderType_MustBeIModelBinder(System.Object,System.Object)">
            <summary>
            The type '{0}' must implement '{1}' to be used as a model binder.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.BindingSource_CannotBeComposite">
            <summary>
            The provided binding source '{0}' is a composite. '{1}' requires that the source must represent a single type of input.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatBindingSource_CannotBeComposite(System.Object,System.Object)">
            <summary>
            The provided binding source '{0}' is a composite. '{1}' requires that the source must represent a single type of input.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.BindingSource_CannotBeGreedy">
            <summary>
            The provided binding source '{0}' is a greedy data source. '{1}' does not support greedy data sources.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatBindingSource_CannotBeGreedy(System.Object,System.Object)">
            <summary>
            The provided binding source '{0}' is a greedy data source. '{1}' does not support greedy data sources.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_PropertyNotFound">
            <summary>
            The property {0}.{1} could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_PropertyNotFound(System.Object,System.Object)">
            <summary>
            The property {0}.{1} could not be found.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.JQueryFormValueProviderFactory_MissingClosingBracket">
            <summary>
            The key '{0}' is invalid JQuery syntax because it is missing a closing bracket.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatJQueryFormValueProviderFactory_MissingClosingBracket(System.Object)">
            <summary>
            The key '{0}' is invalid JQuery syntax because it is missing a closing bracket.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.KeyValuePair_BothKeyAndValueMustBePresent">
            <summary>
            A value is required.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatKeyValuePair_BothKeyAndValueMustBePresent">
            <summary>
            A value is required.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinderUtil_ModelCannotBeNull">
            <summary>
            The binding context has a null Model, but this binder requires a non-null model of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinderUtil_ModelCannotBeNull(System.Object)">
            <summary>
            The binding context has a null Model, but this binder requires a non-null model of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinderUtil_ModelInstanceIsWrong">
            <summary>
            The binding context has a Model of type '{0}', but this binder can only operate on models of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinderUtil_ModelInstanceIsWrong(System.Object,System.Object)">
            <summary>
            The binding context has a Model of type '{0}', but this binder can only operate on models of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
            The binding context cannot have a null ModelMetadata.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
            The binding context cannot have a null ModelMetadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinderUtil_ModelTypeIsWrong">
            <summary>
            The binding context has a ModelType of '{0}', but this binder can only operate on models of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinderUtil_ModelTypeIsWrong(System.Object,System.Object)">
            <summary>
            The binding context has a ModelType of '{0}', but this binder can only operate on models of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ModelBinding_MissingBindRequiredMember">
            <summary>
            A value for the '{0}' property was not provided.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatModelBinding_MissingBindRequiredMember(System.Object)">
            <summary>
            A value for the '{0}' property was not provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.PropertyBindingPredicateProvider_WrongType">
            <summary>
            The type '{0}' does not implement the interface '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatPropertyBindingPredicateProvider_WrongType(System.Object,System.Object)">
            <summary>
            The type '{0}' does not implement the interface '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ValueProviderResult_NoConverterExists">
            <summary>
            The parameter conversion from type '{0}' to type '{1}' failed because no type converter can convert between these types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatValueProviderResult_NoConverterExists(System.Object,System.Object)">
            <summary>
            The parameter conversion from type '{0}' to type '{1}' failed because no type converter can convert between these types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HttpResponseStreamWriter_InvalidBufferSize">
            <summary>
            The byte buffer must have a length of at least '{0}' to be used with a char buffer of size '{1}' and encoding '{2}'. Use '{3}.{4}' to compute the correct size for the byte buffer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHttpResponseStreamWriter_InvalidBufferSize(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The byte buffer must have a length of at least '{0}' to be used with a char buffer of size '{1}' and encoding '{2}'. Use '{3}.{4}' to compute the correct size for the byte buffer.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.FileResult_PathNotRooted">
            <summary>
            Path '{0}' was not rooted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFileResult_PathNotRooted(System.Object)">
            <summary>
            Path '{0}' was not rooted.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UrlNotLocal">
            <summary>
            The supplied URL is not local. A URL with an absolute path is considered local if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUrlNotLocal">
            <summary>
            The supplied URL is not local. A URL with an absolute path is considered local if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree.#ctor(Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree"/>.
            </summary>
            <param name="actions">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree.Version">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.ActionSelectorDecisionTreeProvider">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.ActionSelectorDecisionTreeProvider.#ctor(Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Routing.ActionSelectorDecisionTreeProvider"/>.
            </summary>
            <param name="actionDescriptorsCollectionProvider">
            The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.ActionSelectorDecisionTreeProvider.DecisionTree">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.AttributeRoute.GetVirtualPath(Microsoft.AspNet.Routing.VirtualPathContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.AttributeRoute.RouteAsync(Microsoft.AspNet.Routing.RouteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry">
            <summary>
            Used to build an <see cref="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute"/>. Represents an individual URL-generating route that will be
            aggregated into the <see cref="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Binder">
            <summary>
            The <see cref="T:Microsoft.AspNet.Routing.Template.TemplateBinder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Constraints">
            <summary>
            The route constraints.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Defaults">
            <summary>
            The route defaults.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Order">
            <summary>
            The order of the template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Precedence">
            <summary>
            The precedence of the template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Name">
            <summary>
            The name of the route.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.RouteGroup">
            <summary>
            The route group.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.RequiredLinkValues">
            <summary>
            The set of values that must be present for link genration.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Template">
            <summary>
            The <see cref="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.Template"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry.TemplateText">
            <summary>
            The original <see cref="T:System.String"/> representing the route template.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.AttributeRouteMatchingEntry">
            <summary>
            Used to build an <see cref="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute"/>. Represents an individual URL-matching route that will be
            aggregated into the <see cref="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteMatchingEntry.Order">
            <summary>
            The order of the template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.AttributeRouteMatchingEntry.Precedence">
            <summary>
            The precedence of the template.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.AttributeRoutePrecedence">
            <summary>
            Computes precedence for an attribute route template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.AttributeRouting.CreateAttributeMegaRoute(Microsoft.AspNet.Routing.IRouter,System.IServiceProvider)">
            <summary>
            Creates an attribute route using the provided services and provided target router.
            </summary>
            <param name="target">The router to invoke when a route entry matches.</param>
            <param name="services">The application services.</param>
            <returns>An attribute route.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute">
            <summary>
            Identifies an action that only supports a given set of HTTP methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute"/> with the given
            set of HTTP methods.
            <param name="httpMethods">The set of supported HTTP methods.</param>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute"/> with the given
            set of HTTP methods an the given route template.
            </summary>
            <param name="httpMethods">The set of supported methods.</param>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets the value of the
            <see cref="P:Microsoft.AspNet.Mvc.RouteAttribute.Order"/> or a default value of 0 if the <see cref="T:Microsoft.AspNet.Mvc.RouteAttribute"/>
            doesn't define a value on the controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.Microsoft#AspNet#Mvc#Infrastructure#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.HttpMethodAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.IActionSelectionDecisionTree">
            <summary>
            A data structure that retrieves a list of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor"/> matches based on the values
            supplied for the current request by <see cref="P:Microsoft.AspNet.Routing.RouteData.Values"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.IActionSelectionDecisionTree.Version">
            <summary>
            Gets the version. The same as the value of
            <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.Version"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.IActionSelectionDecisionTree.Select(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Retrieves a set of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor"/> based on the route values supplied by
            <paramref name="routeValues"/>/
            </summary>
            <param name="routeValues">The route values for the current request.</param>
            <returns>A set of <see cref="T:Microsoft.AspNet.Mvc.Abstractions.ActionDescriptor"/> matching the route values.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.IActionSelectorDecisionTreeProvider">
            <summary>
            Stores an <see cref="T:Microsoft.AspNet.Mvc.Routing.ActionSelectionDecisionTree"/> for the current value of
            <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider.ActionDescriptors"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.IActionSelectorDecisionTreeProvider.DecisionTree">
            <summary>
            Gets the <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionDescriptorsCollectionProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute">
            <summary>
            An <see cref="T:Microsoft.AspNet.Routing.IRouter"/> implementation for attribute routing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute.#ctor(Microsoft.AspNet.Routing.IRouter,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Routing.AttributeRouteMatchingEntry},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Routing.AttributeRouteLinkGenerationEntry},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.ILogger,System.Int32)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute"/>.
            </summary>
            <param name="next">The next router. Invoked when a route entry matches.</param>
            <param name="entries">The set of route entries.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute.Version">
            <summary>
            Gets the version of this route. This corresponds to the value of
            <see cref="P:Microsoft.AspNet.Mvc.Infrastructure.ActionDescriptorsCollection.Version"/> when this route was created.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute.RouteAsync(Microsoft.AspNet.Routing.RouteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.InnerAttributeRoute.GetVirtualPath(Microsoft.AspNet.Routing.VirtualPathContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.RouteValueEqualityComparer">
             <summary>
             An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation that compares objects as-if
             they were route value strings.
             </summary>
             <remarks>
             Values that are are not strings are converted to strings using
             <c>Convert.ToString(x, CultureInfo.InvariantCulture)</c>. <c>null</c> values are converted
             to the empty string.
            
             strings are compared using <see cref="F:System.StringComparison.OrdinalIgnoreCase"/>.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.RouteValueEqualityComparer.Equals(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.RouteValueEqualityComparer.GetHashCode(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.UrlActionContext">
            <summary>
            Context object to be used for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> generates.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Action">
            <summary>
            The name of the action method that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> uses to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Controller">
            <summary>
            The name of the controller that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> uses to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Values">
            <summary>
            The object that contains the route parameters that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/>
            uses to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Protocol">
            <summary>
            The protocol for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> generates
            such as "http" or "https"
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Host">
            <summary>
            The host name for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> generates.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlActionContext.Fragment">
            <summary>
            The fragment for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)"/> generates.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.UrlHelper">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNet.Mvc.IUrlHelper"/> that contains methods to
            build URLs for ASP.NET MVC within an application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.#ctor(Microsoft.AspNet.Mvc.Infrastructure.IActionContextAccessor,Microsoft.AspNet.Mvc.Infrastructure.IActionSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Routing.UrlHelper"/> class using the specified action context and
            action selector.
            </summary>
            <param name="actionContextAccessor">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionContextAccessor"/> to access the action context
            of the current request.</param>
            <param name="actionSelector">The <see cref="T:Microsoft.AspNet.Mvc.Infrastructure.IActionSelector"/> to be used for verifying the correctness of
            supplied parameters for a route.
            </param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.Action(Microsoft.AspNet.Mvc.Routing.UrlActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.IsLocalUrl(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.GeneratePathFromRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Generates the absolute path of the url for the specified route values by
            using the specified route name.
            </summary>
            <param name="routeName">The name of the route that is used to generate the URL.</param>
            <param name="values">A dictionary that contains the parameters for a route.</param>
            <returns>The absolute path of the URL.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.Content(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Routing.UrlHelper.Link(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Routing.UrlRouteContext">
            <summary>
            Context object to be used for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)"/> generates.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlRouteContext.RouteName">
            <summary>
            The name of the route that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)"/> uses to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlRouteContext.Values">
            <summary>
            The object that contains the route values for the generated URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlRouteContext.Protocol">
            <summary>
            The protocol for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)"/> generates
            such as "http" or "https"
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlRouteContext.Host">
            <summary>
            The host name for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)"/> generates.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Routing.UrlRouteContext.Fragment">
            <summary>
            The fragment for the URLs that <see cref="M:Microsoft.AspNet.Mvc.IUrlHelper.RouteUrl(Microsoft.AspNet.Mvc.Routing.UrlRouteContext)"/> generates.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ViewFeatures.IKeepTempDataResult">
            <summary>
            A marker interface for <see cref="T:Microsoft.AspNet.Mvc.IActionResult"/> types which need to have temp data saved.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Builder.MvcApplicationBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> to add MVC to the request execution pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
            <remarks>This method only supports attribute routing. To add conventional routes use
            <see cref="M:Microsoft.AspNet.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Routing.IRouteBuilder})"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNet.Builder.MvcApplicationBuilderExtensions.UseMvcWithDefaultRoute(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> request execution pipeline
            with a default route named 'default' and the following template:
            '{controller=Home}/{action=Index}/{id?}'.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNet.Builder.IApplicationBuilder,System.Action{Microsoft.AspNet.Routing.IRouteBuilder})">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.</param>
            <param name="configureRoutes">A callback to configure MVC routes.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions">
            <summary>
            Contains the extension methods for <see cref="P:Microsoft.AspNet.Mvc.MvcOptions.Conventions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention"/> to all the controllers in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.</param>
            <param name="controllerModelConvention">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> to all the actions in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.</param>
            <param name="actionModelConvention">The <see cref="T:Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ActionApplicationModelConvention.#ctor(Microsoft.AspNet.Mvc.ApplicationModels.IActionModelConvention)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ActionApplicationModelConvention"/>.
            </summary>
            <param name="actionModelConvention">The action convention to be applied on all actions
            in the application.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ActionApplicationModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ControllerApplicationModelConvention.#ctor(Microsoft.AspNet.Mvc.ApplicationModels.IControllerModelConvention)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ControllerApplicationModelConvention"/>.
            </summary>
            <param name="controllerConvention">The controller convention to be applied on all controllers
            in the application.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ControllerApplicationModelConvention.Apply(Microsoft.AspNet.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions">
            <summary>
            Extensions for configuring MVC using an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNet.Mvc.MvcOptions})">
            <summary>
            Registers an action to configure <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Register the specified <paramref name="controllerTypes"/> as services and as a source for controller
            discovery.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="controllerTypes">A sequence of controller <see cref="T:System.Type"/>s to register in the
            <paramref name="services"/> and used for controller discovery.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers controller types from the specified <paramref name="assemblies"/> as services and as a source
            for controller discovery.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="controllerAssemblies">Assemblies to scan.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNet.Mvc.MvcOptions})">
            <summary>
            Registers an action to configure <see cref="T:Microsoft.AspNet.Mvc.MvcOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Register the specified <paramref name="controllerTypes"/> as services and as a source for controller
            discovery.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="controllerTypes">A sequence of controller <see cref="T:System.Type"/>s to register in the
            <paramref name="services"/> and used for controller discovery.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Registers controller types from the specified <paramref name="assemblies"/> as services and as a source
            for controller discovery.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="controllerAssemblies">Assemblies to scan.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Internal.ClosedGenericMatcher">
            <summary>
            Helper related to generic interface definitions and implementing classes.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.ClosedGenericMatcher.ExtractGenericInterface(System.Type,System.Type)">
            <summary>
            Determine whether <paramref name="queryType"/> is or implements a closed generic <see cref="T:System.Type"/>
            created from <paramref name="interfaceType"/>.
            </summary>
            <param name="queryType">The <see cref="T:System.Type"/> of interest.</param>
            <param name="interfaceType">The open generic <see cref="T:System.Type"/> to match. Usually an interface.</param>
            <returns>
            The closed generic <see cref="T:System.Type"/> created from <paramref name="interfaceType"/> that
            <paramref name="queryType"/> is or implements. <c>null</c> if the two <see cref="T:System.Type"/>s have no such
            relationship.
            </returns>
            <remarks>
            This method will return <paramref name="queryType"/> if <paramref name="interfaceType"/> is
            <c>typeof(KeyValuePair{,})</c>, and <paramref name="queryType"/> is
            <c>typeof(KeyValuePair{string, object})</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast <see cref="T:Microsoft.Extensions.Internal.PropertyHelper"/>.
            This constructor does not cache the helper. For caching, use <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Object)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Property">
            <summary>
            Gets the backing <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Name">
            <summary>
            Gets (or sets in derived types) the property name.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueGetter">
            <summary>
            Gets the property value getter.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueSetter">
            <summary>
            Gets the property value setter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetValue(System.Object)">
            <summary>
            Returns the property value for the specified <paramref name="instance"/>.
            </summary>
            <param name="instance">The object whose property value will be returned.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.SetValue(System.Object,System.Object)">
            <summary>
            Sets the property value for the specified <paramref name="instance" />.
            </summary>
            <param name="instance">The object whose property value will be set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Type)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            specified type.
            </summary>
            <param name="type">the type to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)">
            <summary>
            <para>
            Creates and caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="instance">The instance to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the instance's type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Type)">
            <summary>
            <para>
            Creates a caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Object)"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <returns>
            A cached array of all public property getters from the type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeNullSafeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter which is safe for a null input object. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter for reference types. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the setter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed. This only works for reference types.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.ObjectToDictionary(System.Object)">
             <summary>
             Given an object, adds each instance property with a public get method as a key and its
             associated value to a dictionary.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a copy
             is returned.
             </summary>
             <remarks>
             The implementation of PropertyHelper will cache the property accessors per-type. This is
             faster when the the same type is used multiple times with ObjectToDictionary.
             </remarks>
        </member>
        <member name="T:Microsoft.Extensions.Internal.SecurityHelper">
            <summary>
            Helper code used when implementing authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.SecurityHelper.MergeUserPrincipal(System.Security.Claims.ClaimsPrincipal,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Add all ClaimsIdentities from an additional ClaimPrincipal to the ClaimsPrincipal
            Merges a new claims principal, placing all new identities first, and eliminating
            any empty unauthenticated identities from context.User
            </summary>
            <param name="identity"></param>
        </member>
    </members>
</doc>
