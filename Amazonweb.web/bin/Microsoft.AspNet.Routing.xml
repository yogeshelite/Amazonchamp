<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Routing</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Builder.RoutingBuilderExtensions">
            <summary>
            Extension methods for adding the <see cref="T:Microsoft.AspNet.Builder.RouterMiddleware"/> middleware to an <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Builder.RoutingBuilderExtensions.UseRouter(Microsoft.AspNet.Builder.IApplicationBuilder,Microsoft.AspNet.Routing.IRouter)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNet.Builder.RouterMiddleware"/> middleware to the specified <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> with the specified <see cref="T:Microsoft.AspNet.Routing.IRouter"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNet.Builder.IApplicationBuilder"/> to add the middleware to.</param>
            <param name="router">The <see cref="T:Microsoft.AspNet.Routing.IRouter"/> to use for routing requests.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Builder.RouteBuilderExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> to add routes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Builder.RouteBuilderExtensions.MapRoute(Microsoft.AspNet.Routing.IRouteBuilder,System.String,System.String)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> with the specified name and template.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="template">The URL pattern of the route.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.RouteBuilderExtensions.MapRoute(Microsoft.AspNet.Routing.IRouteBuilder,System.String,System.String,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> with the specified name, template, and default values.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">An object that contains default values for route parameters. The object's properties represent the names and values of the default values.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.RouteBuilderExtensions.MapRoute(Microsoft.AspNet.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> with the specified name, template, default values, and constraints.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">An object that contains default values for route parameters. The object's properties represent the names and values of the default values.</param>
            <param name="constraints">An object that contains constraints for the route. The object's properties represent the names and values of the constraints.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Builder.RouteBuilderExtensions.MapRoute(Microsoft.AspNet.Routing.IRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> with the specified name, template, default values, and data tokens.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNet.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">An object that contains default values for route parameters. The object's properties represent the names and values of the default values.</param>
            <param name="constraints">An object that contains constraints for the route. The object's properties represent the names and values of the constraints.</param>
            <param name="dataTokens">An object that contains data tokens for the route. The object's properties represent the names and values of the data tokens.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Routing.DefaultInlineConstraintResolver">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNet.Routing.IInlineConstraintResolver"/>. Resolves constraints by parsing
            a constraint key and constraint arguments, using a map to resolve the constraint type, and calling an
            appropriate constructor for the constraint type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.DefaultInlineConstraintResolver.#ctor(Microsoft.Extensions.OptionsModel.IOptions{Microsoft.AspNet.Routing.RouteOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.DefaultInlineConstraintResolver"/> class.
            </summary>
            <param name="routeOptions">
            Accessor for <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/> containing the constraints of interest.
            </param>
        </member>
        <member name="M:Microsoft.AspNet.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)">
            <inheritdoc />
            <example>
            A typical constraint looks like the following
            "exampleConstraint(arg1, arg2, 12)".
            Here if the type registered for exampleConstraint has a single constructor with one argument,
            The entire string "arg1, arg2, 12" will be treated as a single argument.
            In all other cases arguments are split at comma.
            </example>
        </member>
        <member name="T:Microsoft.AspNet.Routing.IInlineConstraintResolver">
            <summary>
            Defines an abstraction for resolving inline constraints as instances of <see cref="T:Microsoft.AspNet.Routing.IRouteConstraint"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
            <summary>
            Resolves the inline constraint.
            </summary>
            <param name="inlineConstraint">The inline constraint to resolve.</param>
            <returns>The <see cref="T:Microsoft.AspNet.Routing.IRouteConstraint"/> the inline constraint was resolved to.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Routing.IRouteBuilder">
            <summary>
            Defines a contract for a route builder in an application. A route builder specifies the routes for an application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.IRouteBuilder.DefaultHandler">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.AspNet.Routing.IRouter"/> that is used if an <see cref="T:Microsoft.AspNet.Routing.IRouter"/> is added to the list of routes but does not specify its own.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.IRouteBuilder.Routes">
            <summary>
            Gets the routes configured in the builder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.IRouteBuilder.Build">
            <summary>
            Builds an <see cref="T:Microsoft.AspNet.Routing.IRouter"/> that routes the routes specified in the <see cref="P:Microsoft.AspNet.Routing.IRouteBuilder.Routes"/> property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.IRouteConstraint">
            <summary>
            Defines the contract that a class must implement in order to check whether a URL parameter value is valid for a constraint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.IRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <summary>
            Determines whether the URL parameter contains a valid value for this constraint.
            </summary>
            <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
            <param name="route">The router that this constraint belongs to.</param>
            <param name="routeKey">The name of the parameter that is being checked.</param>
            <param name="values">A dictionary that contains the parameters for the URL.</param>
            <param name="routeDirection">An object that indicates whether the constraint check is being performed when an incoming request is being handled or when a URL is being generated.</param>
            <returns><c>true</c> if the URL parameter contains a valid value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Routing.RouteConstraintBuilder">
            <summary>
            A builder for produding a mapping of keys to see <see cref="T:Microsoft.AspNet.Routing.IRouteConstraint"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNet.Routing.RouteConstraintBuilder"/> allows iterative building a set of route constraints, and will
            merge multiple entries for the same key.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteConstraintBuilder.#ctor(Microsoft.AspNet.Routing.IInlineConstraintResolver,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Routing.RouteConstraintBuilder"/> instance.
            </summary>
            <param name="inlineConstraintResolver">The <see cref="T:Microsoft.AspNet.Routing.IInlineConstraintResolver"/>.</param>
            <param name="displayName">The display name (for use in error messages).</param>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteConstraintBuilder.Build">
            <summary>
            Builds a mapping of constraints.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> of the constraints.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteConstraintBuilder.AddConstraint(System.String,System.Object)">
             <summary>
             Adds a constraint instance for the given key.
             </summary>
             <param name="key">The key.</param>
             <param name="value">
             The constraint instance. Must either be a string or an instance of <see cref="T:Microsoft.AspNet.Routing.IRouteConstraint"/>.
             </param>
             <remarks>
             If the <paramref name="value"/> is a string, it will be converted to a <see cref="T:Microsoft.AspNet.Routing.Constraints.RegexRouteConstraint"/>.
            
             For example, the string <code>Product[0-9]+</code> will be converted to the regular expression
             <code>^(Product[0-9]+)</code>. See <see cref="T:System.Text.RegularExpressions.Regex"/> for more details.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteConstraintBuilder.AddResolvedConstraint(System.String,System.String)">
            <summary>
            Adds a constraint for the given key, resolved by the <see cref="T:Microsoft.AspNet.Routing.IInlineConstraintResolver"/>.
            </summary>
            <param name="key">The key.</param>
            <param name="constraintText">The text to be resolved by <see cref="T:Microsoft.AspNet.Routing.IInlineConstraintResolver"/>.</param>
            <remarks>
            The <see cref="T:Microsoft.AspNet.Routing.IInlineConstraintResolver"/> can create <see cref="T:Microsoft.AspNet.Routing.IRouteConstraint"/> instances
            based on <paramref name="constraintText"/>. See <see cref="P:Microsoft.AspNet.Routing.RouteOptions.ConstraintMap"/> to register
            custom constraint types.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteConstraintBuilder.SetOptional(System.String)">
            <summary>
            Sets the given key as optional.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:Microsoft.AspNet.Routing.RouteData">
            <summary>
            Information about the current routing path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteData.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Routing.RouteData"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteData.#ctor(Microsoft.AspNet.Routing.RouteData)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Routing.RouteData"/> instance with values copied from <paramref name="other"/>.
            </summary>
            <param name="other">The other <see cref="T:Microsoft.AspNet.Routing.RouteData"/> instance to copy.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteData.DataTokens">
            <summary>
            Gets the data tokens produced by routes on the current routing path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteData.Routers">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNet.Routing.IRouter"/> instances on the current routing path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteData.Values">
            <summary>
            Gets the set of values produced by routes on the current routing path.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.RouteDirection">
            <summary>
            Indicates whether ASP.NET routing is processing a URL from an HTTP request or generating a URL.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Routing.RouteDirection.IncomingRequest">
            <summary>
            A URL from a client is being processed.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Routing.RouteDirection.UrlGeneration">
            <summary>
            A URL is being created based on the route definition.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteOptions.LowercaseUrls">
            <summary>
            Gets or sets a value indicating whether all generated URLs are lower-case.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteOptions.AppendTrailingSlash">
            <summary>
            Gets or sets a value indicating whether a trailing slash should be appended to the generated URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteOptions.UseBestEffortLinkGeneration">
             <summary>
             Gets or sets the value that enables best-effort link generation.
            
             If enabled, link generation will use allow link generation to succeed when the set of values provided
             cannot be validated.
             </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.RouteValueDictionary">
            <summary>
            An <see cref="T:System.Collections.Generic.IDictionary`2"/> type for route values.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Routing.RouteValueDictionary.Empty">
            <summary>
            An empty, cached instance of <see cref="T:Microsoft.AspNet.Routing.RouteValueDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.#ctor">
            <summary>
            Creates an empty <see cref="T:Microsoft.AspNet.Routing.RouteValueDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.#ctor(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNet.Routing.RouteValueDictionary"/> initialized with the specified <paramref name="values"/>.
            </summary>
            <param name="values">An object to initialize the dictionary. The value can be of type
            <see cref="T:System.Collections.Generic.IDictionary`2"/> or <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/>
            or an object with public properties as key-value pairs.
            </param>
            <remarks>
            If the value is a dictionary or other <see cref="T:System.Collections.Generic.IEnumerable`1"/>,
            then its entries are copied. Otherwise the object is interpreted as a set of key-value pairs where the
            property names are keys, and property values are the values, and copied into the dictionary.
            Only public instance non-index properties are considered.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.Comparer">
            <summary>
            Gets the comparer for this dictionary.
            </summary>
            <remarks>
            This will always be a reference to <see cref="P:System.StringComparer.OrdinalIgnoreCase"/>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.Values">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Values">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.Add(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.RouteValueDictionary.TryGetValue(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.VirtualPathData">
            <summary>
            Represents information about the route and virtual path that are the result of
            generating a URL with the ASP.NET routing middleware.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.VirtualPathData.#ctor(Microsoft.AspNet.Routing.IRouter,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.VirtualPathData"/> class.
            </summary>
            <param name="router">The object that is used to generate the URL.</param>
            <param name="virtualPath">The generated URL.</param>
        </member>
        <member name="M:Microsoft.AspNet.Routing.VirtualPathData.#ctor(Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.VirtualPathData"/> class.
            </summary>
            <param name="router">The object that is used to generate the URL.</param>
            <param name="virtualPath">The generated URL.</param>
            <param name="dataTokens">The collection of custom values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Routing.VirtualPathData.#ctor(Microsoft.AspNet.Routing.IRouter,Microsoft.AspNet.Http.PathString,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.VirtualPathData"/> class.
            </summary>
            <param name="router">The object that is used to generate the URL.</param>
            <param name="virtualPath">The generated URL.</param>
            <param name="dataTokens">The collection of custom values.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.VirtualPathData.DataTokens">
            <summary>
            Gets the collection of custom values for the <see cref="P:Microsoft.AspNet.Routing.VirtualPathData.Router"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.VirtualPathData.Router">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNet.Routing.IRouter"/> that was used to generate the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.VirtualPathData.VirtualPath">
            <summary>
            Gets or sets the URL that was generated from the <see cref="P:Microsoft.AspNet.Routing.VirtualPathData.Router"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.AlphaRouteConstraint">
            <summary>
            Constrains a route parameter to contain only lowercase or uppercase letters A through Z in the English alphabet.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.AlphaRouteConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.AlphaRouteConstraint" /> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.BoolRouteConstraint">
            <summary>
            Constrains a route parameter to represent only Boolean values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.BoolRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.DateTimeRouteConstraint">
            <summary>
            Constrains a route parameter to represent only <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This constraint tries to parse strings by using all of the formats returned by the
            CultureInfo.InvariantCulture.DateTimeFormat.GetAllDateTimePatterns() method.
            For a sample on how to list all formats which are considered, please visit
            http://msdn.microsoft.com/en-us/library/aszyst2c(v=vs.110).aspx
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.DateTimeRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.DecimalRouteConstraint">
            <summary>
            Constrains a route parameter to represent only decimal values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.DecimalRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.DoubleRouteConstraint">
            <summary>
            Constrains a route parameter to represent only 64-bit floating-point values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.DoubleRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.FloatRouteConstraint">
            <summary>
            Constrains a route parameter to represent only 32-bit floating-point values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.FloatRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.GuidRouteConstraint">
            <summary>
            Constrains a route parameter to represent only <see cref="T:System.Guid"/> values.
            Matches values specified in any of the five formats "N", "D", "B", "P", or "X",
            supported by Guid.ToString(string) and Guid.ToString(String, IFormatProvider) methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.GuidRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.IntRouteConstraint">
            <summary>
            Constrains a route parameter to represent only 32-bit integer values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.IntRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint">
            <summary>
            Constrains a route parameter to be a string of a given length or within a given range of lengths.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint" /> class that constrains
            a route parameter to be a string of a given length.
            </summary>
            <param name="length">The length of the route parameter.</param>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint" /> class that constrains
            a route parameter to be a string of a given length.
            </summary>
            <param name="minLength">The minimum length allowed for the route parameter.</param>
            <param name="maxLength">The maximum length allowed for the route parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint.MinLength">
            <summary>
            Gets the minimum length allowed for the route parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint.MaxLength">
            <summary>
            Gets the maximum length allowed for the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.LengthRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.LongRouteConstraint">
            <summary>
            Constrains a route parameter to represent only 64-bit integer values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.LongRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.MaxLengthRouteConstraint">
            <summary>
            Constrains a route parameter to be a string with a maximum length.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.MaxLengthRouteConstraint" /> class.
            </summary>
            <param name="maxLength">The maximum length allowed for the route parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
            <summary>
            Gets the maximum length allowed for the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MaxLengthRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.MaxRouteConstraint">
            <summary>
            Constrains a route parameter to be an integer with a maximum value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.MaxRouteConstraint" /> class.
            </summary>
            <param name="max">The maximum value allowed for the route parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.MaxRouteConstraint.Max">
            <summary>
            Gets the maximum allowed value of the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MaxRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.MinLengthRouteConstraint">
            <summary>
            Constrains a route parameter to be a string with a minimum length.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.MinLengthRouteConstraint" /> class.
            </summary>
            <param name="minLength">The minimum length allowed for the route parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.MinLengthRouteConstraint.MinLength">
            <summary>
            Gets the minimum length allowed for the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MinLengthRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.MinRouteConstraint">
            <summary>
            Constrains a route parameter to be a long with a minimum value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.MinRouteConstraint" /> class.
            </summary>
            <param name="min">The minimum value allowed for the route parameter.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.MinRouteConstraint.Min">
            <summary>
            Gets the minimum allowed value of the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.MinRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.OptionalRouteConstraint">
            <summary>
            Defines a constraint on an optional parameter. If the parameter is present, then it is constrained by InnerConstraint. 
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint">
            <summary>
            Constraints a route parameter to be an integer within a given range of values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint" /> class.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <remarks>The minimum value should be less than or equal to the maximum value.</remarks>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint.Min">
            <summary>
            Gets the minimum allowed value of the route parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint.Max">
            <summary>
            Gets the maximum allowed value of the route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.RangeRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.RegexInlineRouteConstraint">
            <summary>
            Represents a regex constraint which can be used as an inlineConstraint.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.RegexInlineRouteConstraint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.Constraints.RegexInlineRouteConstraint" /> class.
            </summary>
            <param name="regexPattern">The regular expression pattern to match.</param>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Constraints.RequiredRouteConstraint">
            <summary>
            Constraints a route parameter that must have a value.
            </summary>
            <remarks>
            This constraint is primarily used to enforce that a non-parameter value is present during
            URL generation.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Constraints.RequiredRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.Routing.CompositeRouteConstraint">
            <summary>
            Constrains a route by several child constraints.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.CompositeRouteConstraint.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNet.Routing.IRouteConstraint})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Routing.CompositeRouteConstraint" /> class.
            </summary>
            <param name="constraints">The child constraints that must match for this constraint to match.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.CompositeRouteConstraint.Constraints">
            <summary>
            Gets the child constraints that must match for this constraint to match.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.CompositeRouteConstraint.Match(Microsoft.AspNet.Http.HttpContext,Microsoft.AspNet.Routing.IRouter,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.AspNet.Routing.RouteDirection)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Routing.Logging.Internal.LogFormatter.Formatter(System.Object,System.Exception)">
            <summary>
            A formatter for use with <see cref="M:Microsoft.Extensions.Logging.ILogger.Log(Microsoft.Extensions.Logging.LogLevel,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
            Value must be greater than or equal to {0}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatArgumentMustBeGreaterThanOrEqualTo(System.Object)">
            <summary>
            Value must be greater than or equal to {0}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.RangeConstraint_MinShouldBeLessThanOrEqualToMax">
            <summary>
            The value for argument '{0}' should be less than or equal to the value for the argument '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatRangeConstraint_MinShouldBeLessThanOrEqualToMax(System.Object,System.Object)">
            <summary>
            The value for argument '{0}' should be less than or equal to the value for the argument '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.PropertyOfTypeCannotBeNull">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatPropertyOfTypeCannotBeNull(System.Object,System.Object)">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.NamedRoutes_AmbiguousRoutesFound">
            <summary>
            The supplied route name '{0}' is ambiguous and matched more than one route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatNamedRoutes_AmbiguousRoutesFound(System.Object)">
            <summary>
            The supplied route name '{0}' is ambiguous and matched more than one route.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.DefaultHandler_MustBeSet">
            <summary>
            A default handler must be set on the RouteCollection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatDefaultHandler_MustBeSet">
            <summary>
            A default handler must be set on the RouteCollection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.DefaultInlineConstraintResolver_AmbiguousCtors">
            <summary>
            The constructor to use for activating the constraint type '{0}' is ambiguous. Multiple constructors were found with the following number of parameters: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatDefaultInlineConstraintResolver_AmbiguousCtors(System.Object,System.Object)">
            <summary>
            The constructor to use for activating the constraint type '{0}' is ambiguous. Multiple constructors were found with the following number of parameters: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.DefaultInlineConstraintResolver_CouldNotFindCtor">
            <summary>
            Could not find a constructor for constraint type '{0}' with the following number of parameters: {1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatDefaultInlineConstraintResolver_CouldNotFindCtor(System.Object,System.Object)">
            <summary>
            Could not find a constructor for constraint type '{0}' with the following number of parameters: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.DefaultInlineConstraintResolver_TypeNotConstraint">
            <summary>
            The constraint type '{0}' which is mapped to constraint key '{1}' must implement the '{2}' interface.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatDefaultInlineConstraintResolver_TypeNotConstraint(System.Object,System.Object,System.Object)">
            <summary>
            The constraint type '{0}' which is mapped to constraint key '{1}' must implement the '{2}' interface.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CannotHaveCatchAllInMultiSegment">
            <summary>
            A path segment that contains more than one section, such as a literal section or a parameter, cannot contain a catch-all parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CannotHaveCatchAllInMultiSegment">
            <summary>
            A path segment that contains more than one section, such as a literal section or a parameter, cannot contain a catch-all parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CannotHaveDefaultValueSpecifiedInlineAndExplicitly">
            <summary>
            The route parameter '{0}' has both an inline default value and an explicit default value specified. A route parameter cannot contain an inline default value when a default value is specified explicitly. Consider removing one of them.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CannotHaveDefaultValueSpecifiedInlineAndExplicitly(System.Object)">
            <summary>
            The route parameter '{0}' has both an inline default value and an explicit default value specified. A route parameter cannot contain an inline default value when a default value is specified explicitly. Consider removing one of them.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CannotHaveConsecutiveParameters">
            <summary>
            A path segment cannot contain two consecutive parameters. They must be separated by a '/' or by a literal string.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CannotHaveConsecutiveParameters">
            <summary>
            A path segment cannot contain two consecutive parameters. They must be separated by a '/' or by a literal string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CannotHaveConsecutiveSeparators">
            <summary>
            The route template separator character '/' cannot appear consecutively. It must be separated by either a parameter or a literal value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CannotHaveConsecutiveSeparators">
            <summary>
            The route template separator character '/' cannot appear consecutively. It must be separated by either a parameter or a literal value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CatchAllCannotBeOptional">
            <summary>
            A catch-all parameter cannot be marked optional.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CatchAllCannotBeOptional">
            <summary>
            A catch-all parameter cannot be marked optional.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_OptionalCannotHaveDefaultValue">
            <summary>
            An optional parameter cannot have default value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_OptionalCannotHaveDefaultValue">
            <summary>
            An optional parameter cannot have default value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_CatchAllMustBeLast">
            <summary>
            A catch-all parameter can only appear as the last segment of the route template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_CatchAllMustBeLast">
            <summary>
            A catch-all parameter can only appear as the last segment of the route template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_InvalidLiteral">
            <summary>
            The literal section '{0}' is invalid. Literal sections cannot contain the '?' character.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_InvalidLiteral(System.Object)">
            <summary>
            The literal section '{0}' is invalid. Literal sections cannot contain the '?' character.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_InvalidParameterName">
            <summary>
            The route parameter name '{0}' is invalid. Route parameter names must be non-empty and cannot contain these characters: '{{', '}}', '/'. The '?' character marks a parameter as optional, and can occur only at the end of the parameter. The '*' character marks a parameter as catch-all, and can occur only at the start of the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_InvalidParameterName(System.Object)">
            <summary>
            The route parameter name '{0}' is invalid. Route parameter names must be non-empty and cannot contain these characters: '{{', '}}', '/'. The '?' character marks a parameter as optional, and can occur only at the end of the parameter. The '*' character marks a parameter as catch-all, and can occur only at the start of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_InvalidRouteTemplate">
            <summary>
            The route template cannot start with a '/' or '~' character.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_InvalidRouteTemplate">
            <summary>
            The route template cannot start with a '/' or '~' character.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_MismatchedParameter">
            <summary>
            There is an incomplete parameter in the route template. Check that each '{' character has a matching '}' character.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_MismatchedParameter">
            <summary>
            There is an incomplete parameter in the route template. Check that each '{' character has a matching '}' character.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_RepeatedParameter">
            <summary>
            The route parameter name '{0}' appears more than one time in the route template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_RepeatedParameter(System.Object)">
            <summary>
            The route parameter name '{0}' appears more than one time in the route template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.RouteConstraintBuilder_ValidationMustBeStringOrCustomConstraint">
            <summary>
            The constraint entry '{0}' - '{1}' on the route '{2}' must have a string value or be of a type which implements '{3}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatRouteConstraintBuilder_ValidationMustBeStringOrCustomConstraint(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The constraint entry '{0}' - '{1}' on the route '{2}' must have a string value or be of a type which implements '{3}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.RouteConstraintBuilder_CouldNotResolveConstraint">
            <summary>
            The constraint entry '{0}' - '{1}' on the route '{2}' could not be resolved by the constraint resolver of type '{3}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatRouteConstraintBuilder_CouldNotResolveConstraint(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The constraint entry '{0}' - '{1}' on the route '{2}' could not be resolved by the constraint resolver of type '{3}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_UnescapedBrace">
            <summary>
            In a route parameter, '{' and '}' must be escaped with '{{' and '}}'
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_UnescapedBrace">
            <summary>
            In a route parameter, '{' and '}' must be escaped with '{{' and '}}'
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_OptionalParameterCanbBePrecededByPeriod">
            <summary>
            In the segment '{0}', the optional parameter '{1}' is preceded by an invalid segment '{2}'.  Only a period (.) can precede an optional parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_OptionalParameterCanbBePrecededByPeriod(System.Object,System.Object,System.Object)">
            <summary>
            In the segment '{0}', the optional parameter '{1}' is preceded by an invalid segment '{2}'.  Only a period (.) can precede an optional parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Resources.TemplateRoute_OptionalParameterHasTobeTheLast">
            <summary>
            An optional parameter must be at the end of the segment. In the segment '{0}', optional parameter '{1}' is followed by '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Resources.FormatTemplateRoute_OptionalParameterHasTobeTheLast(System.Object,System.Object,System.Object)">
            <summary>
            An optional parameter must be at the end of the segment. In the segment '{0}', optional parameter '{1}' is followed by '{2}'.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Template.InlineConstraint">
            <summary>
            The parsed representation of an inline constraint in a route parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Template.InlineConstraint.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNet.Routing.Template.InlineConstraint"/>.
            </summary>
            <param name="constraint">The constraint text.</param>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Template.InlineConstraint.Constraint">
            <summary>
            Gets the constraint text.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Routing.Template.TemplateBinder.RoutePartsEqual(System.Object,System.Object)">
            <summary>
            Compares two objects for equality as parts of a case-insensitive path.
            </summary>
            <param name="a">An object to compare.</param>
            <param name="b">An object to compare.</param>
            <returns>True if the object are equal, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Routing.Template.TemplateValuesResult">
            <summary>
            The values used as inputs for constraints and link generation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Template.TemplateValuesResult.AcceptedValues">
            <summary>
            The set of values that will appear in the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Routing.Template.TemplateValuesResult.CombinedValues">
             <summary>
             The set of values that that were supplied for URL generation.
             </summary>
             <remarks>
             This combines implicit (ambient) values from the <see cref="T:Microsoft.AspNet.Routing.RouteData"/> of the current request
             (if applicable), explictly provided values, and default values for parameters that appear in
             the route template.
            
             Implicit (ambient) values which are invalidated due to changes in values lexically earlier in the
             route template are excluded from this set.
             </remarks>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Contains extension methods to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.ConfigureRouting(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNet.Routing.RouteOptions})">
            <summary>
            Configures a set of <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/> for the application.
            </summary>
            <param name="services">The services available in the application.</param>
            <param name="setupAction">An action to configure the <see cref="T:Microsoft.AspNet.Routing.RouteOptions"/>.</param>
        </member>
    </members>
</doc>
